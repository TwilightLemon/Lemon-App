<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ws="https://schemas.elecho.dev/wpfsuite"
                    xmlns:av="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="av">

    <Style x:Key="IconToggleButton" TargetType="ToggleButton">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Padding"
                Value="7" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="bd"
                            Background="Transparent"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                        <Path x:Name="path"
                              Fill="{DynamicResource ForeColor}"
                              Data="{TemplateBinding Tag}"
                              Stretch="Uniform" 
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="False">
                            <Setter TargetName="path" Property="Fill"
                                    Value="{DynamicResource ForeColor}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="path"
                                    Property="Fill"
                                    Value="{DynamicResource HighlightThemeColor}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bd"
                                    Property="Background"
                                    Value="{DynamicResource MaskColor}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter TargetName="bd"
                                    Property="Background"
                                    Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SimpleVerticalScrollViewerStyle"
           TargetType="{x:Type ws:ScrollViewer}">
        <Setter Property="ws:StylusTouchDevice.Simulate"
                Value="True" />
        <Setter Property="PanningMode"
                Value="VerticalOnly" />
        <Setter Property="VerticalScrollBarVisibility"
                Value="Hidden" />
    </Style>
    <Style x:Key="AccentToggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Template"
                Value="{DynamicResource AccentToggleButtonTemplate}" />
    </Style>
    <ControlTemplate x:Key="AccentToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Border x:Name="border"
                CornerRadius="8"
                BorderBrush="{DynamicResource BorderColor}"
                Background="{DynamicResource HighlightThemeColor}">
            <ContentPresenter x:Name="contentPresenter"
                              Focusable="False"
                              HorizontalAlignment="Left"
                              Margin="{TemplateBinding Padding}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="Center" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="False">
                <Setter TargetName="border"
                        Property="Background"
                        Value="{DynamicResource MaskColor}" />
                <Setter TargetName="border"
                        Property="BorderThickness"
                        Value="1" />
                <Setter Property="TextElement.Foreground"
                        Value="{DynamicResource ForeColor}" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="True">
                <Setter TargetName="border"
                        Property="Background"
                        Value="{DynamicResource HighlightThemeColor}" />
                <Setter TargetName="border"
                        Property="BorderThickness"
                        Value="0" />
                <Setter Property="TextElement.Foreground"
                        Value="{DynamicResource BackgroundColor}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuRadioButton"
           TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground"
                Value="{DynamicResource ForeColor}" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Padding"
                Value="4 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot"
                          Background="Transparent"
                          SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False" 
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Border x:Name="checkedTab" Background="{DynamicResource HighlightThemeColor}" 
                                Height="4"
                                CornerRadius="2"
                                Margin="4 0"
                                VerticalAlignment="Bottom"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="TextElement.Foreground"
                                    Value="{DynamicResource HighlightThemeColor}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="False">
                            <Setter Property="TextElement.Foreground"
                                    Value="{DynamicResource ForeColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="TextElement.Foreground"
                                    Value="{DynamicResource HighlightThemeColor}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter TargetName="checkedTab"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter Property="TextElement.Foreground"
                                    Value="{DynamicResource HighlightThemeColor}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="False">
                            <Setter TargetName="checkedTab"
                                    Property="Visibility"
                                    Value="Collapsed" />
                            <Setter Property="TextElement.Foreground"
                                    Value="{DynamicResource ForeColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RoundToggleButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground"
                Value="{DynamicResource ForeColor}" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnChecked">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
                                                              Storyboard.TargetName="ellipse">
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3"
                                                         Value="26,0,0,0">
                                    <EasingThicknessKeyFrame.EasingFunction>
                                        <CircleEase EasingMode="EaseOut" />
                                    </EasingThicknessKeyFrame.EasingFunction>
                                </EasingThicknessKeyFrame>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnUnchecked">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"
                                                              Storyboard.TargetName="ellipse">
                                <EasingThicknessKeyFrame KeyTime="0:0:0.3"
                                                         Value="6,0,0,0">
                                    <EasingThicknessKeyFrame.EasingFunction>
                                        <CircleEase EasingMode="EaseOut" />
                                    </EasingThicknessKeyFrame.EasingFunction>
                                </EasingThicknessKeyFrame>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="Transparent">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="Left"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="Center" />
                        <Border x:Name="border"
                                Background="Transparent"
                                CornerRadius="12"
                                BorderThickness="1"
                                BorderBrush="{DynamicResource FocusMaskColor}"
                                Width="48"
                                Margin="0 0 20 0"
                                Height="24"
                                HorizontalAlignment="Right">
                            <Ellipse x:Name="ellipse"
                                     Width="16"
                                     Height="16"
                                     Fill="{DynamicResource ForeColor}"
                                     HorizontalAlignment="Left"
                                     Opacity="0.8"
                                     Margin="4 0 0 0" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger  RoutedEvent="ToggleButton.Checked">
                            <BeginStoryboard Storyboard="{StaticResource OnChecked}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                            <BeginStoryboard Storyboard="{StaticResource OnUnchecked}" />
                        </EventTrigger>
                        <Trigger Property="IsChecked"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="Background"
                                    Value="{DynamicResource HighlightThemeColor}" />
                            <Setter TargetName="border"
                                    Property="BorderThickness"
                                    Value="0" />
                            <Setter TargetName="ellipse"
                                    Property="Fill"
                                    Value="{DynamicResource BackgroundColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SimpleListBoxStyle"
           TargetType="{x:Type ws:ListBox}">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalOnly" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Disabled" />
        <Setter Property="VirtualizingPanel.ScrollUnit"
                Value="Pixel" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="1" SnapsToDevicePixels="true">
                        <ws:ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Style="{StaticResource SimpleVerticalScrollViewerStyle}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ws:ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SimpleCheckBoxStyle"
           TargetType="{x:Type CheckBox}">
        <Setter Property="Background"
                Value="{DynamicResource MaskColor}" />
        <Setter Property="Foreground"
                Value="{DynamicResource ForeColor}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource FocusMaskColor}" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot"
                          Background="Transparent"
                          SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder"
                                Height="16"
                                Width="16"
                                CornerRadius="2"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="1"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Center"
                                      Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                      Fill="{DynamicResource ForeColor}"
                                      Margin="1"
                                      Opacity="0"
                                      Stretch="None" />
                                <Rectangle x:Name="indeterminateMark"
                                           Fill="{DynamicResource ForeColor}"
                                           Margin="2"
                                           Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent"
                                 Value="true">
                            <Setter Property="Padding"
                                    Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="checkBoxBorder"
                                    Value="{DynamicResource FocusMaskColor}" />
                            <Setter Property="Fill"
                                    TargetName="optionMark"
                                    Value="{DynamicResource ForeColor}" />
                            <Setter Property="Fill"
                                    TargetName="indeterminateMark"
                                    Value="{DynamicResource ForeColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="checkBoxBorder"
                                    Value="{DynamicResource FocusMaskColor}" />
                            <Setter Property="Fill"
                                    TargetName="optionMark"
                                    Value="{DynamicResource ForeColor}" />
                            <Setter Property="Fill"
                                    TargetName="indeterminateMark"
                                    Value="{DynamicResource ForeColor}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Opacity"
                                    TargetName="optionMark"
                                    Value="1" />
                            <Setter Property="Opacity"
                                    TargetName="indeterminateMark"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="{x:Null}">
                            <Setter Property="Opacity"
                                    TargetName="optionMark"
                                    Value="0" />
                            <Setter Property="Opacity"
                                    TargetName="indeterminateMark"
                                    Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SimpleTextBoxStyle"
           TargetType="{x:Type TextBox}">
        <Setter Property="Background"
                Value="{DynamicResource MaskColor}" />
        <Setter Property="Foreground"
                Value="{DynamicResource ForeColor}" />
        <Setter Property="CaretBrush"
                Value="{DynamicResource ForeColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                            SnapsToDevicePixels="True"
                            CornerRadius="10,10,10,10"
                            Background="{TemplateBinding Background}">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="8 0 0 0"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden"
                                      VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity"
                                    TargetName="border"
                                    Value="0.56" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled"
                               Value="true" />
                    <Condition Property="IsSelectionActive"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush"
                        Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SimpleTextBoxStyleForWs"
           TargetType="{x:Type ws:TextBox}">
        <Setter Property="Background"
                Value="{DynamicResource MaskColor}" />
        <Setter Property="Foreground"
                Value="{DynamicResource ForeColor}" />
        <Setter Property="CaretBrush"
                Value="{DynamicResource ForeColor}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource BorderColor}" />
        <Setter Property="FocusedBorderBrush"
                Value="{DynamicResource FocusMaskColor}" />
        <Setter Property="HoverBorderBrush"
                Value="{DynamicResource FocusMaskColor}" />
        <Setter Property="CornerRadius"
                Value="10" />
    </Style>
    <Style x:Key="SimplePasswordBoxStyleForWs"
           TargetType="{x:Type ws:PasswordBox}">
        <Setter Property="Background"
                Value="{DynamicResource MaskColor}" />
        <Setter Property="Foreground"
                Value="{DynamicResource ForeColor}" />
        <Setter Property="CaretBrush"
                Value="{DynamicResource ForeColor}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="CornerRadius"
                Value="10" />
    </Style>
    <Style x:Key="SimpleListBoxItemStyle"
           TargetType="{x:Type ws:ListBoxItem}">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Margin"
                Value="5 2" />
        <Setter Property="CornerRadius"
                Value="8" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Foreground"
                Value="{DynamicResource ForeColor}" />
        <Setter Property="HoverBackground"
                Value="{DynamicResource MaskColor}" />
        <Setter Property="SelectedBackground"
                Value="{DynamicResource MaskColor}" />
        <Setter Property="SelectedActiveBackground"
                Value="{DynamicResource MaskColor}" />
    </Style>
    <Style x:Key="AccentButtonStyleForWs"
           TargetType="{x:Type ws:Button}">
        <Setter Property="Foreground"
                Value="{DynamicResource BackgroundColor}" />
        <Setter Property="Background"
                Value="{DynamicResource HighlightThemeColor}" />
        <Setter Property="HoverBackground"
                Value="{DynamicResource FocusAccentColor}" />
        <Setter Property="PressedBackground"
                Value="{DynamicResource FocusAccentColor}" />
        <Setter Property="CornerRadius"
                Value="8" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Cursor"
                Value="Hand" />
    </Style>
    <Style x:Key="SimpleButtonStyleForWs"
           TargetType="{x:Type ws:Button}">
        <Setter Property="Foreground"
                Value="{DynamicResource ForeColor}" />
        <Setter Property="Background"
                Value="{DynamicResource MaskColor}" />
        <Setter Property="HoverBackground"
                Value="{DynamicResource FocusMaskColor}" />
        <Setter Property="PressedBackground"
                Value="{DynamicResource FocusMaskColor}" />
        <Setter Property="CornerRadius"
                Value="8" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource BorderColor}" />
        <Setter Property="HoverBorderBrush"
                Value="{DynamicResource BorderColor}" />
        <Setter Property="PressedBorderBrush"
                Value="{DynamicResource BorderColor}" />
        <Setter Property="Cursor"
                Value="Hand" />
    </Style>
    <Style x:Key="SimpleIconButtonStyleForWs"
           TargetType="{x:Type ws:Button}">
        <Setter Property="Foreground"
                Value="{DynamicResource ForeColor}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="HoverBackground"
                Value="{DynamicResource MaskColor}" />
        <Setter Property="PressedBackground"
                Value="{DynamicResource MaskColor}" />
        <Setter Property="CornerRadius"
                Value="4" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Cursor"
                Value="Hand" />
    </Style>
    <Style x:Key="SimpleComboBoxStyleForWs"
           TargetType="{x:Type ws:ComboBox}">
        <Setter Property="Background"
                Value="{DynamicResource MaskColor}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource FocusMaskColor}" />
        <Setter Property="Foreground"
                Value="{DynamicResource ForeColor}" />
        <Setter Property="GlyphBrush"
                Value="{DynamicResource ForeColor}" />
        <Setter Property="PopupBackground"
                Value="{DynamicResource BackgroundColor}" />
        <Setter Property="CornerRadius"
                Value="4,4,4,4" />
        <Setter Property="PopupCornerRadius"
                Value="4,4,4,4" />
        <Setter Property="HoverBackground"
                Value="{DynamicResource FocusMaskColor}" />
        <Setter Property="HoverBorderBrush"
                Value="{DynamicResource FocusMaskColor}" />
        <Setter Property="HoverGlyphBrush"
                Value="{DynamicResource ForeColor}" />
        <Setter Property="HoverForeground"
                Value="{DynamicResource ForeColor}" />
        <Setter Property="PressedBackground"
                Value="{DynamicResource FocusMaskColor}" />
        <Setter Property="PressedBorderBrush"
                Value="{DynamicResource FocusMaskColor}" />
        <Setter Property="PressedGlyphBrush"
                Value="{DynamicResource ForeColor}" />
        <Setter Property="PressedForeground"
                Value="{DynamicResource ForeColor}" />
    </Style>

    <Style x:Key="FluentWindowStyle"
           TargetType="{x:Type Window}">
        <Setter Property="Background"
                Value="{DynamicResource WindowBackgroundColor}" />
        <Setter  Property="Foreground"
                 Value="{DynamicResource ForeColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter />
                        <Grid VerticalAlignment="Top"
                              Height="48">
                            <ws:Button    x:Name="CloseBtn"
                                          Width="48"
                                          Height="48"
                                          Content="&#xE8BB;"
                                          FontFamily="Segoe Fluent Icons"
                                          FontSize="10"
                                          HorizontalAlignment="Right"
                                          VerticalAlignment="Top"
                                          BorderThickness="0"
                                          Cursor="Hand"
                                          WindowChrome.IsHitTestVisibleInChrome="True"
                                          Background="Transparent"
                                          Foreground="{DynamicResource ForeColor}"
                                          HoverBackground="#FFE32820"
                                          PressedBackground="#FFEF1E15" />
                            <ws:Button x:Name="MaxmizeBtn"
                                       Width="48"
                                       Height="48"
                                       Margin="0 0 48 0"
                                       FontFamily="Segoe Fluent Icons"
                                       FontSize="10"
                                       Cursor="Hand"
                                       WindowChrome.IsHitTestVisibleInChrome="True"
                                       ws:WindowOption.IsMaximumButton="True"
                                       Background="Transparent"
                                       Foreground="{DynamicResource ForeColor}"
                                       HoverBackground="{DynamicResource MaskColor}"
                                       PressedBackground="{DynamicResource FocusMaskColor}"
                                       DisabledForeground="{DynamicResource FocusMaskColor}"
                                       DisabledBackground="Transparent"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Top"
                                       BorderThickness="0">
                                <ws:ConditionalControl Condition="{TemplateBinding WindowState,Converter={x:Static ws:NotEqualConverter.Instance},ConverterParameter={x:Static WindowState.Maximized}}">
                                    <ws:ConditionalControl.ContentWhenTrue>
                                        <TextBlock Text="&#xE922;" />
                                    </ws:ConditionalControl.ContentWhenTrue>
                                    <ws:ConditionalControl.ContentWhenFalse>
                                        <TextBlock Text="&#xE923;" />
                                    </ws:ConditionalControl.ContentWhenFalse>
                                </ws:ConditionalControl>
                            </ws:Button>
                            <ws:Button x:Name="MinimizeBtn"
                                       Width="48"
                                       Height="48"
                                       Margin="0 0 96 0"
                                       Content="&#xE921;"
                                       FontFamily="Segoe Fluent Icons"
                                       FontSize="10"
                                       Background="Transparent"
                                       Cursor="Hand"
                                       Foreground="{DynamicResource ForeColor}"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Top"
                                       BorderThickness="0"
                                       WindowChrome.IsHitTestVisibleInChrome="True"
                                       HoverBackground="{DynamicResource MaskColor}"
                                       PressedBackground="{DynamicResource FocusMaskColor}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Slider右侧-->
    <Style x:Key="RepeatButtonTransparent"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}"
                            Width="{TemplateBinding Width}">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--滑块Thumb-->
    <ControlTemplate x:Key="SliderThumbHorizontalDefault"
                     TargetType="{x:Type Thumb}">
        <Border BorderBrush="{DynamicResource BorderColor}"
                SnapsToDevicePixels="True"
                BorderThickness="1"
                Height="20"
                Width="20"
                CornerRadius="10">
            <Border CornerRadius="10"
                    x:Name="border"
                    SnapsToDevicePixels="True"
                    BorderThickness="4"
                    BorderBrush="{DynamicResource ButtonPureColor}"
                    Background="{DynamicResource HighlightThemeColor}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDragging"
                     Value="true">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation  Storyboard.TargetName="border"
                                                 Duration="0:0:0.2"
                                                 Storyboard.TargetProperty="BorderThickness"
                                                 To="6" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation  Storyboard.TargetName="border"
                                                 Duration="0:0:0.2"
                                                 Storyboard.TargetProperty="BorderThickness"
                                                 To="4" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false" />
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--Slider左侧高亮-->
    <Style x:Key="SliderLeftStyle"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}">
                        <Border Background="{TemplateBinding Background}"
                                Height="4"
                                CornerRadius="2 0 0 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="SliderHorizontal"
                     TargetType="{x:Type Slider}">
        <Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto"
                                   MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick"
                         Fill="{TemplateBinding Foreground}"
                         Height="4"
                         Margin="0,0,0,2"
                         Placement="Top"
                         Grid.Row="0"
                         Visibility="Collapsed" />
                <TickBar x:Name="BottomTick"
                         Fill="{TemplateBinding Foreground}"
                         Height="4"
                         Margin="0,2,0,0"
                         Placement="Bottom"
                         Grid.Row="2"
                         Visibility="Collapsed" />
                <Border x:Name="TrackBackground"
                        Background="{DynamicResource FocusMaskColor}"
                        Height="4.0"
                        Margin="5,0"
                        Grid.Row="1"
                        VerticalAlignment="center"
                        CornerRadius="2" />
                <Track x:Name="PART_Track"
                       Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}"
                                      Style="{StaticResource SliderLeftStyle}"
                                      Margin="0 0 -2 0"
                                      Background="{DynamicResource HighlightThemeColor}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}"
                                      Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb"
                               Focusable="False"
                               Height="20"
                               OverridesDefaultStyle="True"
                               Template="{StaticResource SliderThumbHorizontalDefault}"
                               VerticalAlignment="Center"
                               Width="20" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement"
                     Value="TopLeft">
                <Setter Property="Visibility"
                        TargetName="TopTick"
                        Value="Visible" />
                <Setter Property="Margin"
                        TargetName="TrackBackground"
                        Value="5,2,5,0" />
            </Trigger>
            <Trigger Property="TickPlacement"
                     Value="BottomRight">
                <Setter Property="Visibility"
                        TargetName="BottomTick"
                        Value="Visible" />
                <Setter Property="Margin"
                        TargetName="TrackBackground"
                        Value="5,0,5,2" />
            </Trigger>
            <Trigger Property="TickPlacement"
                     Value="Both">
                <Setter Property="Visibility"
                        TargetName="TopTick"
                        Value="Visible" />
                <Setter Property="Visibility"
                        TargetName="BottomTick"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled"
                     Value="true" />
            <Trigger Property="IsKeyboardFocused"
                     Value="true">
                <Setter Property="Foreground"
                        TargetName="Thumb"
                        Value="Blue" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="FluentSliderStyle"
           TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Template"
                Value="{StaticResource SliderHorizontal}" />
    </Style>
</ResourceDictionary>
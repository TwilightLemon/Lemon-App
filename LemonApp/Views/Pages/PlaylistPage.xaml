<Page x:Class="LemonApp.Views.Pages.PlaylistPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="clr-namespace:LemonApp.Views.Pages"
      xmlns:base="clr-namespace:LemonApp.Common.UIBases;assembly=LemonApp.Common"
      xmlns:ws="https://schemas.elecho.dev/wpfsuite"
      xmlns:converter="clr-namespace:LemonApp.Converters"
      xmlns:common="clr-namespace:LemonApp.Common;assembly=LemonApp.Common"
      xmlns:component="clr-namespace:LemonApp.Components"
      xmlns:uc="clr-namespace:LemonApp.Views.UserControls"
      xmlns:vm="clr-namespace:LemonApp.ViewModels"
      mc:Ignorable="d"
      d:DataContext="{d:DesignInstance Type=vm:PlaylistPageViewModel}"
      d:DesignHeight="450"
      d:DesignWidth="800"
      Foreground="{DynamicResource ForeColor}"
      Title="PlaylistPage">
    <Page.Resources>
        <Storyboard x:Key="HideInfoViewAni">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CreatorView"
                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                        Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TitleTb"
                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                        Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InfoView"
                                           Storyboard.TargetProperty="(FrameworkElement.Height)">
                <EasingDoubleKeyFrame KeyTime="00:00:00.2000000"
                                      Value="120">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="FuncView"
                                              Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00.2000000"
                                         Value="100,0,0,25">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut" />
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="ContentView"
                                              Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00.2000000"
                                         Value="0,128,0,0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut" />
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ShowInfoViewAni">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CreatorView"
                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.0"
                                        Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TitleTb"
                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.0"
                                        Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InfoView"
                                           Storyboard.TargetProperty="(FrameworkElement.Height)">
                <EasingDoubleKeyFrame KeyTime="00:00:00.2"
                                      Value="200">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="FuncView"
                                              Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00.2000000"
                                         Value="190,0,0,4">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut" />
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="ContentView"
                                              Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00.2000000"
                                         Value="0,208,0,0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut" />
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CollapseInfoViewAction">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CoverImg"
                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                        Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TitleTb"
                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                        Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CreatorView"
                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                        Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InfoView"
                                           Storyboard.TargetProperty="(FrameworkElement.Height)">
                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                      Value="64" />
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="FuncView"
                                              Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00"
                                         Value="10,0,0,4" />
            </ThicknessAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="InfoView"
                                              Storyboard.TargetProperty="(Border.Padding)">
                <EasingThicknessKeyFrame KeyTime="00:00:00"
                                         Value="8,8,8,8" />
            </ThicknessAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="ContentView"
                                              Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00"
                                         Value="0,72,0,0" />
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
    </Page.Resources>
    <Grid>
        <Border x:Name="InfoView"
                BorderThickness="1"
                BorderBrush="{DynamicResource BorderColor}"
                CornerRadius="8"
                Margin="8"
                Padding="12"
                Background="{DynamicResource TabMaskColor}"
                Height="200"
                VerticalAlignment="Top">
            <Grid Visibility="Visible">
                <Border x:Name="CoverImg"
                        Margin="4"
                        Width="{Binding ElementName=CoverImg, Path=ActualHeight}"
                        RenderOptions.BitmapScalingMode="HighQuality"
                        HorizontalAlignment="Left"
                        CornerRadius="8"
                        d:Background="Pink"
                        Background="{Binding Cover}" />
                <Grid x:Name="TitleTb"
                      Margin="190,0,0,86">
                    <TextBlock  d:Text="Twlm's Music World"
                                TextWrapping="NoWrap"
                                Text="{Binding ListName}"
                                ToolTip="{Binding ListName}"
                                FontSize="32"
                                FontWeight="Bold"
                                VerticalAlignment="Top" />
                    <TextBlock d:Text="Desc"
                               Text="{Binding Description}"
                               Margin="0 50 0 0"
                               FontSize="12">
                        <TextBlock.ToolTip>
                            <ToolTip MaxWidth="420">
                                <TextBlock Margin="8" Text="{Binding Description}" TextWrapping="Wrap"/>
                            </ToolTip>
                        </TextBlock.ToolTip>
                    </TextBlock>
                </Grid>
                <Grid x:Name="CreatorView"
                      HorizontalAlignment="Stretch"
                      VerticalAlignment="Top"
                      Margin="190,83,0,0">
                    <Border HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Height="32"
                            Width="32"
                            CornerRadius="16"
                            RenderOptions.BitmapScalingMode="HighQuality"
                            Background="{Binding CreatorAvatar}"
                            d:Background="Pink" />
                    <TextBlock HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               d:Text="Creator"
                               Text="{Binding CreatorName}"
                               Margin="40,0,0,0" />
                </Grid>
                <ws:WrapPanel x:Name="FuncView"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Bottom"
                              Height="36"
                              HorizontalSpacing="16"
                              ItemHeight="36"
                              Margin="190,0,0,4">
                    <ws:Button Style="{StaticResource AccentButtonStyleForWs}"
                               Command="{Binding PlayAllCommand}"
                               Padding="16 0">
                        Play All
                    </ws:Button>
                    <ws:Button Style="{StaticResource SimpleButtonStyleForWs}"
                               Padding="16 0">
                        Add to Favorite
                    </ws:Button>
                    <ws:Button Style="{StaticResource SimpleButtonStyleForWs}"
                               Padding="16 0">
                        Share
                    </ws:Button>
                </ws:WrapPanel>
            </Grid>
        </Border>

        <Grid x:Name="ContentView"
              Margin="0 208 0 0">
            <Border BorderThickness="1"
                    BorderBrush="{DynamicResource BorderColor}"
                    Background="{DynamicResource TabMaskColor}"
                    CornerRadius="8"
                    Margin="8 4 8 8"
                    VerticalAlignment="Top"
                    Height="42">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>
                    <ws:TextBox x:Name="ListSearchBox"
                                Grid.Column="1"
                                Height="30"
                                Margin="8 2"
                                Padding="8 6"
                                Placeholder="Search"
                                TextChanged="ListSearchBox_TextChanged"
                                Style="{StaticResource SimpleTextBoxStyleForWs}" />
                    <ws:WrapPanel HorizontalSpacing="12"
                                  ItemHeight="30"
                                  Margin="20 0"
                                  VerticalAlignment="Center">
                        <TextBlock VerticalAlignment="Center">
                            <Run Text="{Binding Musics.Count,Mode=OneWay}"
                                 d:Text="520" />
                            <Run Text=" Songs" />
                        </TextBlock>
                        <ToggleButton x:Name="SelectModeTB"
                                      Style="{StaticResource AccentToggleButtonStyle}"
                                      Padding="16 0"
                                      Click="SelectModeTB_Click">
                            Select
                        </ToggleButton>
                        <ws:Button x:Name="AddToBtn"
                                   Style="{StaticResource SimpleButtonStyleForWs}"
                                   Padding="16 0"
                                   Click="AddToBtn_Click">
                            Add to
                        </ws:Button>
                        <ws:Button x:Name="DeleteBtn"
                                   Visibility="{Binding IsOwned,Converter={x:Static ws:BooleanToVisibilityConverter.Instance}}"
                                   Style="{StaticResource SimpleButtonStyleForWs}"
                                   Padding="16 0"
                                   Click="DeleteBtn_Click">
                            Delete
                        </ws:Button>
                        <ws:Button Style="{StaticResource SimpleButtonStyleForWs}"
                                   Padding="16 0">
                            Download
                        </ws:Button>
                    </ws:WrapPanel>
                </Grid>
            </Border>
            <ws:ListBox x:Name="listBox"
                        Margin="0 46 0 0"
                        ItemsSource="{Binding Musics}"
                        ScrollViewer.ScrollChanged="listBox_ScrollChanged"
                        AlternationCount="{Binding Musics.Count}"
                        MouseDoubleClick="listBox_MouseDoubleClick"
                        d:ItemsSource="{d:SampleData ItemCount=5}"
                        d:AlternationCount="5"
                        Style="{DynamicResource SimpleListBoxStyle}"
                        ItemContainerStyle="{DynamicResource SimpleListBoxItemStyle}">
                <ws:ListBox.ItemTemplate>
                    <DataTemplate>
                        <Border Height="48"
                                x:Name="_border"
                                CornerRadius="8"
                                Background="Transparent">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3*" />
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="2*" />
                                </Grid.ColumnDefinitions>
                                <ws:ConditionalControl x:Name="Highlighter"
                                                       d:Condition="True"
                                                       Width="4"
                                                       Height="22"
                                                       HorizontalAlignment="Left">
                                    <ws:ConditionalControl.ContentWhenTrue>
                                        <Border Background="{DynamicResource HighlightThemeColor}"
                                                CornerRadius="2" />
                                    </ws:ConditionalControl.ContentWhenTrue>
                                </ws:ConditionalControl>
                                <ws:WrapPanel VerticalAlignment="Center"
                                              Margin="12 0"
                                              HorizontalSpacing="4"
                                              VerticalSpacing="2"
                                              HorizontalAlignment="Stretch">
                                    <TextBlock Text="{Binding MusicName}"
                                               VerticalAlignment="Center" />
                                    <TextBlock Text="{Binding MusicName_Lyric}"
                                               VerticalAlignment="Center"
                                               FontSize="10"
                                               FontWeight="Normal"
                                               Opacity="0.6" />
                                    <uc:MusicInfoLand x:Name="InfoLand"
                                                      HorizontalAlignment="Right"
                                                      VerticalAlignment="Center"
                                                      Quality="{Binding Quality}"
                                                      MvId="{Binding Mvmid}" />
                                </ws:WrapPanel>
                                <ws:Button Margin="4"
                                           HorizontalAlignment="Left"
                                           Padding="8 4"
                                           Grid.Column="1"
                                           Command="{x:Static component:PublicPopupMenuHolder.GotoArtistCommand}"
                                           CommandParameter="{Binding}"
                                           Style="{StaticResource SimpleIconButtonStyleForWs}">
                                    <TextBlock Text="{Binding SingerText}" />
                                </ws:Button>
                                <ws:Button Margin="4"
                                           HorizontalAlignment="Left"
                                           Padding="8 4"
                                           Grid.Column="2"
                                           Command="{Binding DataContext.GotoAlbumPageCommand ,RelativeSource={RelativeSource AncestorType=ws:ListBox}}"
                                           CommandParameter="{Binding Album.Id}"
                                           Style="{StaticResource SimpleIconButtonStyleForWs}">
                                    <TextBlock Text="{Binding Album.Name}" />
                                </ws:Button>
                            </Grid>
                        </Border>
                        <DataTemplate.Triggers>
                            <DataTrigger Value="True">
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{x:Static converter:MusicEqualConverter.Instance}">
                                        <Binding />
                                        <Binding Path="DataContext.Playing"
                                                 RelativeSource="{RelativeSource AncestorType=ws:ListBox}" />
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <Setter Property="TextElement.Foreground"
                                        Value="{DynamicResource HighlightThemeColor}" />
                                <Setter Property="TextElement.FontWeight"
                                        Value="Bold" />
                                <Setter TargetName="Highlighter"
                                        Property="Condition"
                                        Value="True" />
                                <!--<Setter TargetName="_border"
                                        Property="Background"
                                        Value="{DynamicResource MaskColor}" />-->
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ws:ListBox.ItemTemplate>
            </ws:ListBox>
        </Grid>
        <base:FluentPopup x:Name="AddtoMenu"
                          StaysOpen="False"
                          ExtPopupAnimation="SlideDown"
                          Background="{DynamicResource PopupWndBgColor}"
                          Placement="Mouse">
            <ws:StackPanel>
                <ws:Button Style="{StaticResource SimpleButtonStyleForWs}"
                           Padding="16 8"
                           CornerRadius="0"
                           Background="Transparent"
                           Click="AddToDissBtn_Click">
                    My Diss
                </ws:Button>
                <ws:Button Style="{StaticResource SimpleButtonStyleForWs}"
                           Padding="16 8"
                           CornerRadius="0"
                           Background="Transparent"
                           Click="AddToNextBtn_Click">
                    Next To Play
                </ws:Button>
            </ws:StackPanel>
        </base:FluentPopup>
        <ws:Button x:Name="GotoPlayingBtn"
                   HorizontalAlignment="Right"
                   VerticalAlignment="Bottom"
                   Visibility="{Binding ShowGotoPlaying}"
                   Margin="32"
                   Width="36"
                   Height="36"
                   CornerRadius="18"
                   Style="{StaticResource AccentButtonStyleForWs}"
                   Click="GotoPlayingBtn_Click">
            <Path Fill="{DynamicResource BackgroundColor}"
                  Stretch="Uniform"
                  Data="{StaticResource Icon_Position}"
                  Width="16"/>
        </ws:Button>
    </Grid>
</Page>

<base:FluentWindowBase x:Class="LemonApp.Views.Windows.MainWindow"
                       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:base="clr-namespace:LemonApp.Common.UIBases;assembly=LemonApp.Common"
                       xmlns:components="clr-namespace:LemonApp.Components"
                       xmlns:converters="clr-namespace:LemonApp.Converters"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                       xmlns:local="clr-namespace:LemonApp.Views.Windows"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:uc="clr-namespace:LemonApp.Views.UserControls"
                       xmlns:viewmodels="clr-namespace:LemonApp.ViewModels"
                       xmlns:ws="https://schemas.elecho.dev/wpfsuite"
                       Title="Lemon App"
                       Width="1080"
                       Height="750"
                       d:DataContext="{d:DesignInstance Type=viewmodels:MainWindowViewModel}"
                       Background="{DynamicResource WindowBackgroundColor}"
                       ExitOnCloseBtnClicked="False"
                       Foreground="{DynamicResource ForeColor}"
                       Mode="Acrylic"
                       RenderOptions.BitmapScalingMode="HighQuality"
                       RenderOptions.ClearTypeHint="Enabled"
                       TextOptions.TextFormattingMode="Ideal"
                       TextOptions.TextHintingMode="Auto"
                       TextOptions.TextRenderingMode="Auto"
                       mc:Ignorable="d">
    <base:FluentWindowBase.Triggers>
        <EventTrigger RoutedEvent="ws:Button.Click" SourceName="OpenPlayListBtn">
            <BeginStoryboard Storyboard="{DynamicResource OpenPlaylistAni}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="ws:Button.Click" SourceName="LyricPage_OpenPlayListBtn">
            <BeginStoryboard Storyboard="{DynamicResource OpenPlaylistAni}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="ws:Button.Click" SourceName="ImmerseMode_OpenPlayListBtn">
            <BeginStoryboard Storyboard="{DynamicResource OpenPlaylistAni}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="MouseDown" SourceName="PlayListPageMask">
            <BeginStoryboard Storyboard="{DynamicResource ClosePlaylistAni}" />
        </EventTrigger>
    </base:FluentWindowBase.Triggers>
    <base:FluentWindowBase.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
        <CollectionViewSource x:Key="MainMenuSource" Source="{Binding MainMenus}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Type" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>

        <Storyboard x:Key="OpenLyricPageAni">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LyricPage" Storyboard.TargetProperty="(Grid.RenderTransform).(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00" Value="300" />
                <EasingDoubleKeyFrame KeyTime="00:00:00.3" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimation Storyboard.TargetName="LyricPage"
                             Storyboard.TargetProperty="Opacity"
                             From="0"
                             To="1"
                             Duration="0:0:0.3" />
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainPage" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LyricPage" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="MusicControl" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00.3" Value="0,110,0,-110">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloseLyricPageAni">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LyricPage" Storyboard.TargetProperty="(Grid.RenderTransform).(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="00" Value="0" />
                <EasingDoubleKeyFrame KeyTime="00:00:00.3" Value="500">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="MusicControl" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00.3" Value="0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut" />
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
            <DoubleAnimation Storyboard.TargetName="LyricPage"
                             Storyboard.TargetProperty="Opacity"
                             From="1"
                             To="0"
                             Duration="0:0:0.3" />
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LyricPage" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.0" Value="{x:Static Visibility.Visible}" />
                <DiscreteObjectKeyFrame KeyTime="00:00:00.3" Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainPage" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OpenPlaylistAni">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlayListPage" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="PlayListBar" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="0 0 -320 0" />
                <EasingThicknessKeyFrame KeyTime="00:00:00.2500" Value="0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut" />
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PlayListPageMask" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                <EasingDoubleKeyFrame KeyTime="00:00:00.2500" Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ClosePlaylistAni">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="PlayListBar" Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00.2500" Value="0 0 -320 0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut" />
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlayListPage" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.2500" Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PlayListPageMask" Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00.2500" Value="0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ShowGoBackBtnAni">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GoBackBtn" Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Hidden}" />
                <DiscreteObjectKeyFrame KeyTime="00:00:00.2200000" Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="GoBackBtn" Storyboard.TargetProperty="(FrameworkElement.Width)">
                <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                <EasingDoubleKeyFrame KeyTime="00:00:00.1500000" Value="28">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="GoBackBtn" Storyboard.TargetProperty="(Control.Padding)">
                <EasingThicknessKeyFrame KeyTime="00:00:00" Value="1,1,1,1" />
                <EasingThicknessKeyFrame KeyTime="00:00:00.2000000" Value="0,14,0,-14" />
                <EasingThicknessKeyFrame KeyTime="00:00:00.4000000" Value="0,0,0,0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut" />
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
    </base:FluentWindowBase.Resources>
    <ws:BoxPanel x:Name="Container" ClipToBounds="True">
        <Grid x:Name="MainContentPage">
            <Grid x:Name="MainPage" Margin="0,0,0,110">
                <Grid x:Name="TitleBar"
                      Height="48"
                      VerticalAlignment="Top"
                      WindowChrome.IsHitTestVisibleInChrome="True">
                    <!--  中部功能区  -->
                    <!--  三大按钮占位 Width:144  -->
                    <!--  左侧Icon  -->
                    <ws:WrapPanel Margin="16,0,0,0"
                                  HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  ClipToBounds="True"
                                  HorizontalSpacing="12"
                                  Orientation="Horizontal">
                        <ws:Button x:Name="GoBackBtn"
                                   Width="28"
                                   Height="28"
                                   Margin="0,0,0,0"
                                   Padding="1,1,1,1"
                                   d:Visibility="Visible"
                                   Click="GoBackBtn_Click"
                                   Style="{StaticResource SimpleIconButtonStyleForWs}"
                                   Visibility="{Binding ElementName=MainContentFrame, Path=CanGoBack, Converter={StaticResource BoolToVisibility}}">
                            <Path Width="12"
                                  Height="12"
                                  Data="{StaticResource Icon_Back}"
                                  Fill="{DynamicResource ForeColor}"
                                  Stretch="Uniform" />
                        </ws:Button>
                        <Image Width="22"
                               Height="22"
                               HorizontalAlignment="Left"
                               RenderOptions.BitmapScalingMode="HighQuality"
                               Source="/Resources/icon.ico" />
                        <TextBlock HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   FontSize="14"
                                   Text="Lemon App" />
                    </ws:WrapPanel>
                    <Grid MaxWidth="380" Margin="220,8">
                        <base:FluentPopup x:Name="SearchHintPopup"
                                          ExtPopupAnimation="SlideDown"
                                          Placement="Bottom"
                                          SlideAnimationOffset="20"
                                          StaysOpen="False" />
                        <ws:TextBox x:Name="SearchBox"
                                    Height="32"
                                    Padding="6,7,0,0"
                                    Background="{DynamicResource MaskColor}"
                                    BorderBrush="{DynamicResource BorderColor}"
                                    CaretBrush="{DynamicResource ForeColor}"
                                    CornerRadius="6"
                                    FocusedBackground="{DynamicResource FocusMaskColor}"
                                    FocusedBorderBrush="{DynamicResource FocusMaskColor}"
                                    Foreground="{DynamicResource ForeColor}"
                                    HoverBackground="{DynamicResource FocusMaskColor}"
                                    HoverBorderBrush="{DynamicResource FocusMaskColor}"
                                    Placeholder="Search"
                                    PreviewKeyDown="SearchBox_PreviewKeyDown"
                                    SelectionBrush="{DynamicResource HighlightThemeColor}"
                                    TextChanged="SearchBox_TextChanged" />
                    </Grid>
                    <!--  用户头像&菜单  -->
                    <Border Margin="0,0,144,0"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Bottom">
                        <base:FluentPopup x:Name="UserProfilePopup"
                                          ExtPopupAnimation="SlideDown"
                                          Placement="Bottom"
                                          StaysOpen="False" />
                    </Border>
                    <TextBlock Margin="0,0,200,0"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Center"
                               Foreground="{DynamicResource HintForeColor}"
                               Text="{Binding UserNameHint, FallbackValue='Login First'}" />
                    <ws:Button x:Name="UserProfileBtn"
                               Width="32"
                               Height="32"
                               Margin="0,0,156,0"
                               HorizontalAlignment="Right"
                               Background="{DynamicResource MaskColor}"
                               BorderThickness="0"
                               Click="UserProfileBtn_Click"
                               CornerRadius="18"
                               Cursor="Hand"
                               HoverBackground="{DynamicResource FocusMaskColor}"
                               PressedBackground="{DynamicResource FocusMaskColor}"
                               ToolTip="Main Menu">
                        <Border Width="28"
                                Height="28"
                                d:Background="LightPink"
                                Background="{Binding Avator, TargetNullValue={StaticResource HighlightThemeColor}}"
                                CornerRadius="14"
                                RenderOptions.BitmapScalingMode="HighQuality" />
                    </ws:Button>
                </Grid>
                <Grid x:Name="ContentPage" Margin="0,48,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"
                                          MinWidth="50"
                                          MaxWidth="320" />
                        <ColumnDefinition Width="4*" />
                    </Grid.ColumnDefinitions>

                    <Grid x:Name="MainMenuGrid">
                        <ws:ListBox x:Name="MainPageMenu"
                                    VerticalAlignment="Top"
                                    d:ItemsSource="{d:SampleData ItemCount=5}"
                                    ItemsSource="{Binding Source={StaticResource MainMenuSource}}"
                                    SelectedItem="{Binding SelectedMenu}"
                                    Style="{StaticResource SimpleListBoxStyle}">
                            <ws:ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ws:ListBoxItem}">
                                    <EventSetter Event="PreviewMouseLeftButtonDown" Handler="MainPageMenuItem_PreviewMouseLeftButtonDown" />
                                    <EventSetter Event="MouseLeave" Handler="MainPageMenuItem_MouseLeave" />
                                    <EventSetter Event="MouseLeftButtonUp" Handler="MainPageMenuItem_MouseLeftButtonUp" />
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                    <Setter Property="Margin" Value="8,4" />
                                    <Setter Property="CornerRadius" Value="8" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="Foreground" Value="{DynamicResource ForeColor}" />
                                    <Setter Property="HoverBackground" Value="{DynamicResource MaskColor}" />
                                    <Setter Property="SelectedBackground" Value="{DynamicResource MaskColor}" />
                                    <Setter Property="SelectedActiveBackground" Value="{DynamicResource MaskColor}" />
                                </Style>
                            </ws:ListBox.ItemContainerStyle>
                            <ws:ListBox.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Margin="16,12,8,0"
                                                       FontSize="12"
                                                       Foreground="{DynamicResource HintForeColor}"
                                                       Text="{Binding Name}" />
                                        </DataTemplate>
                                    </GroupStyle.HeaderTemplate>
                                </GroupStyle>
                            </ws:ListBox.GroupStyle>
                            <ws:ListBox.ItemTemplate>
                                <DataTemplate>
                                    <ws:BoxPanel Height="40"
                                                 d:Background="#3C000000"
                                                 Background="Transparent">
                                        <Border x:Name="FocusedIcon"
                                                Width="3"
                                                Height="16"
                                                HorizontalAlignment="Left"
                                                d:Visibility="Visible"
                                                Background="{DynamicResource HighlightThemeColor}"
                                                CornerRadius="1.5"
                                                Visibility="Hidden" />
                                        <ContentControl Content="{Binding Decorator}" />
                                        <ws:StackPanel Width="120"
                                                       Margin="18,0"
                                                       HorizontalAlignment="Center"
                                                       Orientation="Horizontal"
                                                       Spacing="12">
                                            <Path Width="14"
                                                  Height="14"
                                                  VerticalAlignment="Center"
                                                  Data="{Binding Icon}"
                                                  Fill="{DynamicResource ForeColor}"
                                                  Stretch="Uniform" />
                                            <TextBlock VerticalAlignment="Center"
                                                       FontSize="12"
                                                       Opacity="0.8"
                                                       Text="{Binding Name}" />
                                        </ws:StackPanel>
                                    </ws:BoxPanel>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="FocusedIcon"
                                                                         Storyboard.TargetProperty="Height"
                                                                         From="0"
                                                                         To="16"
                                                                         Duration="0:0:0.3">
                                                            <DoubleAnimation.EasingFunction>
                                                                <CubicEase EasingMode="EaseOut" />
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <Setter TargetName="FocusedIcon" Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" Value="False">
                                            <Setter TargetName="FocusedIcon" Property="Visibility" Value="Hidden" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ws:ListBox.ItemTemplate>
                        </ws:ListBox>
                        <!--<TextBlock VerticalAlignment="Bottom"
                                   Margin="8"
                                   Opacity="0.4"
                                   TextAlignment="Center"
                                   Text="Powered by .NET 8"
                                   TextWrapping="Wrap" />-->
                    </Grid>
                    <Border x:Name="ContentHost"
                            Grid.Column="1"
                            Margin="8,0,8,8"
                            Background="{DynamicResource ContentBgColor}"
                            CornerRadius="8">
                        <Frame Name="MainContentFrame"
                               Navigated="MainContentFrame_Navigated"
                               Navigating="MainContentFrame_Navigating"
                               NavigationUIVisibility="Hidden" />
                    </Border>
                    <ws:ConditionalControl Grid.Column="1"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           Condition="{Binding IsLoading}">
                        <ws:ConditionalControl.ContentWhenTrue>
                            <base:LoadingIcon x:Name="LoadingIcon"
                                              Grid.Column="1"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </ws:ConditionalControl.ContentWhenTrue>
                    </ws:ConditionalControl>
                </Grid>
            </Grid>
            <Grid x:Name="LyricPage" Visibility="Collapsed">
                <Grid.RenderTransform>
                    <TranslateTransform />
                </Grid.RenderTransform>
                <Border x:Name="LyricPage_Background" Grid.ColumnSpan="2">
                    <Border.Background>
                        <ImageBrush ImageSource="{Binding LyricPageBackgroundSource}"
                                    RenderOptions.BitmapScalingMode="LowQuality"
                                    Stretch="UniformToFill">
                            <ImageBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.4" ScaleY="1.4" />
                                    <RotateTransform x:Name="LyricImgRT" Angle="0" CenterX="0.5" CenterY="0.5" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </ImageBrush.RelativeTransform>
                        </ImageBrush>
                    </Border.Background>
                </Border>
                <Border x:Name="LyricToolBar"
                        Grid.Column="1"
                        Width="36"
                        Margin="0,0,36,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Background="{DynamicResource MaskColor}"
                        CornerRadius="8">
                    <StackPanel>
                        <ws:ToggleButton x:Name="SwitchLrcImmerseModeBtn"
                                         Height="36"
                                         Padding="10"
                                         Click="SwitchLrcImmerseModeBtn_Click"
                                         IsChecked="{Binding IsImmerseMode}"
                                         Style="{StaticResource IconToggleButton}"
                                         Tag="{DynamicResource LyricImmerseIcon}" />
                        <ws:Button Height="36"
                                   Padding="10"
                                   Command="{Binding LyricView.FontSizeUpCommand}"
                                   Style="{StaticResource SimpleIconButtonStyleForWs}">
                            <Path Data="{StaticResource Icon_FontUp}"
                                  Fill="{DynamicResource ForeColor}"
                                  Stretch="Uniform" />
                        </ws:Button>
                        <ws:Button Height="36"
                                   Padding="10"
                                   Command="{Binding LyricView.FontSizeDownCommand}"
                                   Style="{StaticResource SimpleIconButtonStyleForWs}">
                            <Path Data="{StaticResource Icon_FontDown}"
                                  Fill="{DynamicResource ForeColor}"
                                  Stretch="Uniform" />
                        </ws:Button>
                        <ToggleButton Height="36"
                                      Padding="10"
                                      IsChecked="{Binding LyricView.IsShowTranslation}"
                                      Style="{StaticResource IconToggleButton}"
                                      Tag="{StaticResource Icon_Trans}"
                                      Visibility="{Binding LyricView.IsTranslationAvailable, Converter={StaticResource BoolToVisibility}}" />
                        <ToggleButton Height="36"
                                      Padding="10"
                                      IsChecked="{Binding LyricView.IsShowRomaji}"
                                      Style="{StaticResource IconToggleButton}"
                                      Tag="{StaticResource Icon_Romaji}"
                                      Visibility="{Binding LyricView.IsRomajiAvailable, Converter={StaticResource BoolToVisibility}}" />
                    </StackPanel>
                </Border>
                <Grid x:Name="LyricPage_Immerse"
                      ClipToBounds="True"
                      Visibility="Collapsed">
                    <Grid Margin="48"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top">
                        <TextBlock Name="ImLyric_MusicNameTb"
                                   Margin="140,12,0,0"
                                   FontSize="32"
                                   FontWeight="Bold"
                                   Opacity="0.8"
                                   Text="{Binding CurrentPlaying.MusicName}" />
                        <TextBlock Name="ImLyric_SingerTb"
                                   Margin="140,58,0,0"
                                   FontSize="24"
                                   FontWeight="Bold"
                                   Opacity="0.6"
                                   Text="{Binding CurrentPlaying.SingerText}" />
                        <Border Width="128"
                                Height="128"
                                HorizontalAlignment="Left"
                                d:Background="Pink"
                                AllowDrop="True"
                                Background="{Binding CurrentPlayingCover, TargetNullValue={StaticResource HighlightThemeColor}}"
                                BorderBrush="{DynamicResource MaskColor}"
                                BorderThickness="4"
                                CornerRadius="12"
                                Drop="LyricPage_Img_Drop"
                                RenderOptions.BitmapScalingMode="HighQuality">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="30"
                                                  Direction="0"
                                                  Opacity="0.6"
                                                  ShadowDepth="0"
                                                  Color="Black" />
                            </Border.Effect>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseEnter">
                                    <i:EventTrigger.Actions>
                                        <i:ControlStoryboardAction>
                                            <i:ControlStoryboardAction.Storyboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ImLyric_MusicNameTb"
                                                                     Storyboard.TargetProperty="Opacity"
                                                                     From="0.5"
                                                                     To="0.8"
                                                                     Duration="0:0:0.3" />
                                                    <DoubleAnimation Storyboard.TargetName="ImLyric_SingerTb"
                                                                     Storyboard.TargetProperty="Opacity"
                                                                     From="0.5"
                                                                     To="0.6"
                                                                     Duration="0:0:0.5" />
                                                    <ThicknessAnimation Storyboard.TargetName="ImLyric_MusicNameTb"
                                                                        Storyboard.TargetProperty="Margin"
                                                                        From="10 12 0 0"
                                                                        To="140 12 0 0"
                                                                        Duration="0:0:0.3">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <CubicEase />
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                    <ThicknessAnimation Storyboard.TargetName="ImLyric_SingerTb"
                                                                        Storyboard.TargetProperty="Margin"
                                                                        From="10 58 0 0"
                                                                        To="140 58 0 0"
                                                                        Duration="0:0:0.5">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <CubicEase />
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                </Storyboard>
                                            </i:ControlStoryboardAction.Storyboard>
                                        </i:ControlStoryboardAction>
                                    </i:EventTrigger.Actions>
                                </i:EventTrigger>
                                <i:EventTrigger EventName="MouseLeave">
                                    <i:EventTrigger.Actions>
                                        <i:ControlStoryboardAction>
                                            <i:ControlStoryboardAction.Storyboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetName="ImLyric_MusicNameTb"
                                                                     Storyboard.TargetProperty="Opacity"
                                                                     To="0"
                                                                     Duration="0:0:0.3" />
                                                    <DoubleAnimation Storyboard.TargetName="ImLyric_SingerTb"
                                                                     Storyboard.TargetProperty="Opacity"
                                                                     To="0"
                                                                     Duration="0:0:0.3" />
                                                    <ThicknessAnimation Storyboard.TargetName="ImLyric_MusicNameTb"
                                                                        Storyboard.TargetProperty="Margin"
                                                                        From="140 12 0 0"
                                                                        To="10 12 0 0"
                                                                        Duration="0:0:0.3">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <CubicEase />
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                    <ThicknessAnimation Storyboard.TargetName="ImLyric_SingerTb"
                                                                        Storyboard.TargetProperty="Margin"
                                                                        From="140 58 0 0"
                                                                        To="10 58 0 0"
                                                                        Duration="0:0:0.5">
                                                        <ThicknessAnimation.EasingFunction>
                                                            <CubicEase />
                                                        </ThicknessAnimation.EasingFunction>
                                                    </ThicknessAnimation>
                                                </Storyboard>
                                            </i:ControlStoryboardAction.Storyboard>
                                        </i:ControlStoryboardAction>
                                    </i:EventTrigger.Actions>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Border>
                    </Grid>
                    <ws:Button x:Name="LyricPage_BackBtn_Center"
                               Width="64"
                               Height="32"
                               Margin="0,18,0,0"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Top"
                               Click="LyricPage_BackBtn_Click"
                               Style="{StaticResource SimpleIconButtonStyleForWs}"
                               WindowChrome.IsHitTestVisibleInChrome="True">
                        <Border Width="52"
                                Height="6"
                                Background="{DynamicResource ForeColor}"
                                CornerRadius="3"
                                Opacity="0.6" />
                    </ws:Button>
                    <Grid Margin="80,0,80,0"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Center">
                        <TextBlock x:Name="BlurLyricTb"
                                   Margin="0,0,0,80"
                                   VerticalAlignment="Center"
                                   DataContext="{Binding CurrentLyric, NotifyOnTargetUpdated=True}"
                                   FontFamily="{StaticResource LyricFont}"
                                   Foreground="{DynamicResource FocusAccentColor}"
                                   TextAlignment="Center">
                            <Run d:Text="hands tied"
                                 FontSize="160"
                                 FontWeight="Bold"
                                 Text="{Binding Lrc.Text, Mode=OneWay, Converter={x:Static converters:WordRandomSpiltConverter.Instance}}" />
                            <TextBlock.Effect>
                                <BlurEffect Radius="6" />
                            </TextBlock.Effect>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TargetUpdated">
                                    <i:ControlStoryboardAction>
                                        <i:ControlStoryboardAction.Storyboard>
                                            <Storyboard>
                                                <DoubleAnimation BeginTime="0:0:00"
                                                                 Storyboard.TargetName="BlurLyricTb"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 From="0"
                                                                 To="0"
                                                                 Duration="0:0:0.6" />
                                                <DoubleAnimation BeginTime="0:0:0.6"
                                                                 Storyboard.TargetName="BlurLyricTb"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 From="0"
                                                                 To="0.4"
                                                                 Duration="0:0:0.3" />
                                            </Storyboard>
                                        </i:ControlStoryboardAction.Storyboard>
                                    </i:ControlStoryboardAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBlock>
                        <TextBlock x:Name="ImmerseModeLrcTb"
                                   VerticalAlignment="Center"
                                   DataContext="{Binding CurrentLyric, NotifyOnTargetUpdated=True}"
                                   FontFamily="{StaticResource LyricFont}"
                                   FontWeight="Bold"
                                   RenderTransformOrigin="0.5,0.5"
                                   TextAlignment="Center"
                                   TextWrapping="Wrap">
                            <TextBlock.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </TextBlock.RenderTransform>
                            <TextBlock FontSize="24"
                                       Opacity="0.7"
                                       Text="{Binding Romaji.Text, Mode=OneWay}"
                                       Visibility="{Binding DataContext.LyricView.IsShowRomaji, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource BoolToVisibility}}" />
                            <LineBreak />
                            <TextBlock d:Text="Dancing with our hands tied"
                                       FontSize="64"
                                       Foreground="{DynamicResource HighlightThemeColor}"
                                       LineHeight="140"
                                       Text="{Binding Lrc.Text, Mode=OneWay}"
                                       TextWrapping="Wrap" />
                            <LineBreak />
                            <TextBlock FontSize="24"
                                       Opacity="0.6"
                                       Text="{Binding Trans, Mode=OneWay}"
                                       Visibility="{Binding DataContext.LyricView.IsShowTranslation, RelativeSource={RelativeSource AncestorType=Window}, Converter={StaticResource BoolToVisibility}}" />
                            <!--<TextBlock.Effect>
                                <DropShadowEffect x:Name="Im_Effect"
                                                  BlurRadius="20"
                                                  ShadowDepth="0"
                                                  Color="Black"
                                                  Opacity="0.6" />
                            </TextBlock.Effect>-->
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TargetUpdated">
                                    <i:ControlStoryboardAction>
                                        <i:ControlStoryboardAction.Storyboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImmerseModeLrcTb" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ImmerseModeLrcTb" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00" Value="8">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <BackEase EasingMode="EaseOut" />
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00.6" Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <BackEase EasingMode="EaseOut" />
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </i:ControlStoryboardAction.Storyboard>
                                    </i:ControlStoryboardAction>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBlock>
                    </Grid>
                    <!--<TextBlock x:Name="Im_NextLrcTb"
                               Margin="100,0,0,180"
                               VerticalAlignment="Bottom"
                               DataContext="{Binding NextLyric, NotifyOnTargetUpdated=True}"
                               FontSize="32"
                               Opacity="0.4"
                               TextAlignment="Left"
                               TextWrapping="Wrap">
                        <Run Text="&gt;&gt;" />
                        <Run Text="{Binding Lyric, FallbackValue=''}" />
                        <TextBlock.Effect>
                            <BlurEffect Radius="6" />
                        </TextBlock.Effect>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TargetUpdated">
                                <i:ControlStoryboardAction>
                                    <i:ControlStoryboardAction.Storyboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Im_NextLrcTb"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0"
                                                             Duration="0:0:0" />
                                            <DoubleAnimation BeginTime="0:0:0.5"
                                                             Storyboard.TargetName="Im_NextLrcTb"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0.4"
                                                             Duration="0:0:0.3" />
                                        </Storyboard>
                                    </i:ControlStoryboardAction.Storyboard>
                                </i:ControlStoryboardAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </TextBlock>-->
                    <Border x:Name="Im_ControlBd"
                            Width="360"
                            Height="78"
                            Margin="0,0,0,90"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Bottom"
                            Background="{DynamicResource MaskColor}"
                            BorderBrush="{DynamicResource BorderColor}"
                            BorderThickness="1"
                            CornerRadius="18">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseEnter">
                                <i:ControlStoryboardAction>
                                    <i:ControlStoryboardAction.Storyboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Im_ControlBd"
                                                             Storyboard.TargetProperty="Opacity"
                                                             From="0.5"
                                                             To="1"
                                                             Duration="0:0:0.2" />
                                        </Storyboard>
                                    </i:ControlStoryboardAction.Storyboard>
                                </i:ControlStoryboardAction>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="MouseLeave">
                                <i:ControlStoryboardAction>
                                    <i:ControlStoryboardAction.Storyboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="Im_ControlBd"
                                                             Storyboard.TargetProperty="Opacity"
                                                             To="0"
                                                             Duration="0:0:0.2" />
                                        </Storyboard>
                                    </i:ControlStoryboardAction.Storyboard>
                                </i:ControlStoryboardAction>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ws:FlexPanel MainAlignment="SpaceEvenly">
                            <ws:Button Width="42"
                                       Height="42"
                                       Command="{Binding ChangeCircleModeCommand}"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}"
                                       ToolTip="Playback Mode">
                                <Path Height="18"
                                      d:Data="{DynamicResource CircleMode_Circle}"
                                      Data="{Binding CircleMode, Converter={x:Static converters:CircleModeToPathDataConverter.Instance}}"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                            <ws:Button Width="42"
                                       Height="42"
                                       Command="{Binding PlayLastCommand}"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}"
                                       ToolTip="Play the last one">
                                <Path Height="18"
                                      Data="{DynamicResource PlayIcon_Last}"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                            <ws:Button Width="52"
                                       Height="52"
                                       Command="{Binding PlayPauseCommand}"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}"
                                       ToolTip="Play or Pause">
                                <ws:ConditionalControl Condition="{Binding IsPlaying}">
                                    <ws:ConditionalControl.ContentWhenFalse>
                                        <Path Data="{DynamicResource PlayIcon_Play}"
                                              Fill="{DynamicResource HighlightThemeColor}"
                                              Stretch="Uniform" />
                                    </ws:ConditionalControl.ContentWhenFalse>
                                    <Path Data="{DynamicResource PlayIcon_Pause}"
                                          Fill="{DynamicResource HighlightThemeColor}"
                                          Stretch="Uniform" />
                                </ws:ConditionalControl>
                            </ws:Button>
                            <ws:Button Width="42"
                                       Height="42"
                                       Command="{Binding PlayNextCommand}"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}"
                                       ToolTip="Play the next one">
                                <Path Height="18"
                                      Data="{DynamicResource PlayIcon_Next}"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                            <ws:Button x:Name="ImmerseMode_OpenPlayListBtn"
                                       Width="42"
                                       Height="42"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}"
                                       ToolTip="Playlist">
                                <Path Height="16"
                                      Data="{DynamicResource OpenPlaylist}"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                        </ws:FlexPanel>
                    </Border>
                </Grid>
                <Grid x:Name="LyricPage_Main">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="6*" />
                        <ColumnDefinition Width="7*" />
                    </Grid.ColumnDefinitions>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="2*" />
                            <RowDefinition Height="1*" />
                        </Grid.RowDefinitions>
                        <Border x:Name="LyricPage_ImgEdge"
                                MinWidth="200"
                                MaxWidth="500"
                                Margin="60" />
                        <Border x:Name="LyricPage_Img"
                                Height="{Binding ElementName=LyricPage_Img, Path=ActualWidth}"
                                HorizontalAlignment="Stretch"
                                d:Background="Pink"
                                AllowDrop="True"
                                Background="{Binding CurrentPlayingCover, TargetNullValue={StaticResource HighlightThemeColor}}"
                                CornerRadius="12"
                                Drop="LyricPage_Img_Drop"
                                RenderOptions.BitmapScalingMode="HighQuality">
                            <Border.Width>
                                <MultiBinding Converter="{x:Static converters:MinValueConverter.Instance}">
                                    <Binding ElementName="LyricPage_ImgEdge" Path="ActualWidth" />
                                    <Binding ElementName="LyricPage_ImgEdge" Path="ActualHeight" />
                                </MultiBinding>
                            </Border.Width>
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="30"
                                                  Direction="0"
                                                  Opacity="0.6"
                                                  ShadowDepth="0"
                                                  Color="Black" />
                            </Border.Effect>
                        </Border>
                        <ws:FlexPanel Grid.Row="1"
                                      Margin="0,-50,0,40"
                                      Direction="Column"
                                      MainAlignment="SpaceEvenly">
                            <TextBlock MinWidth="150"
                                       Margin="48,0"
                                       HorizontalAlignment="Stretch"
                                       VerticalAlignment="Top"
                                       Foreground="{DynamicResource ForeColor}"
                                       LineHeight="32"
                                       TextAlignment="Center">
                                <Run d:Text="Dancing With Our Hands Tied"
                                     FontSize="18"
                                     FontWeight="Bold"
                                     Text="{Binding CurrentPlaying.MusicName, TargetNullValue='Welcome~'}" />
                                <LineBreak />
                                <Run d:Text="Taylor Swift"
                                     FontSize="14"
                                     Text="{Binding CurrentPlaying.SingerText, TargetNullValue='Lemon App'}" />
                                <Run d:Text="reputation"
                                     FontSize="14"
                                     Text="{Binding CurrentPlaying.Album.Name, StringFormat=' · {0}'}" />
                            </TextBlock>
                            <Grid MaxWidth="580" Margin="58,0">
                                <TextBlock HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           d:Text="00:00"
                                           Text="{Binding CurrentPlayingPositionText}" />
                                <TextBlock HorizontalAlignment="Right"
                                           VerticalAlignment="Center"
                                           d:Text="00:00"
                                           Text="{Binding CurrentPlayingDurationText}" />
                                <Slider Margin="42,0"
                                        VerticalAlignment="Center"
                                        Maximum="{Binding CurrentPlayingDuration}"
                                        PreviewMouseDown="PlaySlider_PreviewMouseDown"
                                        PreviewMouseUp="PlaySlider_PreviewMouseUp"
                                        Style="{DynamicResource FluentSliderStyle}"
                                        Value="{Binding CurrentPlayingPosition, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                            <ws:FlexPanel MaxWidth="580"
                                          Margin="32,0"
                                          MainAlignment="SpaceEvenly">
                                <ws:Button Width="42"
                                           Height="42"
                                           Style="{StaticResource SimpleIconButtonStyleForWs}"
                                           ToolTip="Add to my favorite">
                                    <Path Height="18"
                                          Data="{DynamicResource HeartIcon}"
                                          Fill="{DynamicResource ForeColor}"
                                          Stretch="Uniform" />
                                </ws:Button>
                                <ToggleButton Width="42"
                                              Height="42"
                                              Padding="13"
                                              IsChecked="{Binding IsShowDesktopLyric}"
                                              Style="{StaticResource IconToggleButton}"
                                              Tag="{DynamicResource OpenDesktopLyric}"
                                              ToolTip="Desktop Lyric Viewer" />
                                <ws:Button Width="42"
                                           Height="42"
                                           Command="{Binding PlayLastCommand}"
                                           Style="{StaticResource SimpleIconButtonStyleForWs}"
                                           ToolTip="Play the last one">
                                    <Path Height="18"
                                          Data="{DynamicResource PlayIcon_Last}"
                                          Fill="{DynamicResource ForeColor}"
                                          Stretch="Uniform" />
                                </ws:Button>
                                <ws:Button Width="58"
                                           Height="58"
                                           Command="{Binding PlayPauseCommand}"
                                           Style="{StaticResource SimpleIconButtonStyleForWs}"
                                           ToolTip="Play or Pause">
                                    <ws:ConditionalControl Condition="{Binding IsPlaying}">
                                        <ws:ConditionalControl.ContentWhenFalse>
                                            <Path Data="{DynamicResource PlayIcon_Play}"
                                                  Fill="{DynamicResource HighlightThemeColor}"
                                                  Stretch="Uniform" />
                                        </ws:ConditionalControl.ContentWhenFalse>
                                        <Path Data="{DynamicResource PlayIcon_Pause}"
                                              Fill="{DynamicResource HighlightThemeColor}"
                                              Stretch="Uniform" />
                                    </ws:ConditionalControl>
                                </ws:Button>
                                <ws:Button Width="42"
                                           Height="42"
                                           Command="{Binding PlayNextCommand}"
                                           Style="{StaticResource SimpleIconButtonStyleForWs}"
                                           ToolTip="Play the next one">
                                    <Path Height="18"
                                          Data="{DynamicResource PlayIcon_Next}"
                                          Fill="{DynamicResource ForeColor}"
                                          Stretch="Uniform" />
                                </ws:Button>
                                <ws:Button Width="42"
                                           Height="42"
                                           Command="{Binding ChangeCircleModeCommand}"
                                           Style="{StaticResource SimpleIconButtonStyleForWs}"
                                           ToolTip="Playback Mode">
                                    <Path Height="18"
                                          d:Data="{DynamicResource CircleMode_Circle}"
                                          Data="{Binding CircleMode, Converter={x:Static converters:CircleModeToPathDataConverter.Instance}}"
                                          Fill="{DynamicResource ForeColor}"
                                          Stretch="Uniform" />
                                </ws:Button>
                                <ws:Button x:Name="LyricPage_OpenPlayListBtn"
                                           Width="42"
                                           Height="42"
                                           Style="{StaticResource SimpleIconButtonStyleForWs}"
                                           ToolTip="Playlist">
                                    <Path Height="16"
                                          Data="{DynamicResource OpenPlaylist}"
                                          Fill="{DynamicResource ForeColor}"
                                          Stretch="Uniform" />
                                </ws:Button>
                            </ws:FlexPanel>
                            <Grid MaxWidth="580" Margin="58,0">
                                <Slider Margin="32,0,0,0"
                                        VerticalAlignment="Center"
                                        IsMoveToPointEnabled="True"
                                        Maximum="1"
                                        Style="{StaticResource FluentSliderStyle}"
                                        Value="{Binding CurrentPlayingVolume}" />
                                <Path Width="16"
                                      Height="16"
                                      HorizontalAlignment="Left"
                                      Data="{DynamicResource AudioIcon}"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </Grid>
                        </ws:FlexPanel>
                    </Grid>
                    <Border x:Name="LyricViewHost"
                            Grid.Column="1"
                            Margin="10,80,120,80"
                            d:Background="White">
                        <Border.OpacityMask>
                            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                <GradientStop Color="Transparent" />
                                <GradientStop Offset="1" Color="Transparent" />
                                <GradientStop Offset="0.2" Color="Black" />
                                <GradientStop Offset="0.8" Color="Black" />
                            </LinearGradientBrush>
                        </Border.OpacityMask>
                    </Border>
                    <ws:Button x:Name="LyricPage_BackBtn"
                               Width="64"
                               Height="32"
                               Margin="0,18,0,0"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Top"
                               Click="LyricPage_BackBtn_Click"
                               Style="{StaticResource SimpleIconButtonStyleForWs}"
                               WindowChrome.IsHitTestVisibleInChrome="True">
                        <Border Width="52"
                                Height="6"
                                Background="{DynamicResource ForeColor}"
                                CornerRadius="3"
                                Opacity="0.6" />
                    </ws:Button>
                </Grid>
            </Grid>
            <!--  disabled for performance issue  -->
            <!--<uc:AudioVisualizer x:Name="visualizer"
                                Height="214"
                                Margin="8,0"
                                VerticalAlignment="Bottom"
                                IsPlaying="{Binding IsPlaying, Mode=OneWay}"
                                Opacity="0.8"
                                Color="{DynamicResource HighlightThemeColor}" />-->
            <Border x:Name="MusicControl"
                    Height="110"
                    VerticalAlignment="Bottom"
                    Background="{DynamicResource TabMaskColor}"
                    BorderBrush="{DynamicResource BorderColor}"
                    BorderThickness="0,1,0,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*" />
                        <RowDefinition Height="5*" />
                    </Grid.RowDefinitions>
                    <base:FluentPopup x:Name="NotificationBox"
                                      Background="{DynamicResource PopupWndBgColor}"
                                      ExtPopupAnimation="SlideUp"
                                      FollowWindowMoving="True"
                                      HorizontalOffset="12"
                                      Placement="Top"
                                      StaysOpen="True"
                                      VerticalOffset="-12">
                        <Border MaxWidth="320"
                                Padding="12"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Bottom"
                                d:Visibility="Visible">
                            <TextBlock x:Name="NotificationTb"
                                       d:Text="xxxxxxxxxxxxxxx"
                                       TextWrapping="Wrap" />
                        </Border>
                    </base:FluentPopup>
                    <Grid>
                        <TextBlock x:Name="PlayingTimeTb"
                                   Margin="14,0,0,0"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   d:Text="00:00"
                                   Foreground="{DynamicResource HintForeColor}"
                                   Text="{Binding CurrentPlayingPositionText}" />
                        <TextBlock x:Name="TotalTimeTb"
                                   Margin="0,0,14,0"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   d:Text="00:00"
                                   Foreground="{DynamicResource HintForeColor}"
                                   Text="{Binding CurrentPlayingDurationText}" />
                        <Slider x:Name="PlaySlider"
                                Margin="60,0"
                                VerticalAlignment="Center"
                                Maximum="{Binding CurrentPlayingDuration}"
                                PreviewMouseDown="PlaySlider_PreviewMouseDown"
                                PreviewMouseUp="PlaySlider_PreviewMouseUp"
                                Style="{DynamicResource FluentSliderStyle}"
                                Value="{Binding CurrentPlayingPosition, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                        <ws:ProgressBar x:Name="CacheProg"
                                        Width="240"
                                        Height="2"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Bottom"
                                        d:Opacity="1"
                                        d:Value="0.5"
                                        Background="{DynamicResource FocusMaskColor}"
                                        BorderThickness="0"
                                        CornerRadius="1"
                                        Foreground="{DynamicResource HighlightThemeColor}"
                                        Maximum="1"
                                        Opacity="0"
                                        Value="{Binding CacheDownloadProgress}" />
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <!--  Left  -->
                        <ws:Button x:Name="MusicControl_Info"
                                   Height="70"
                                   Margin="6,4,0,4"
                                   HorizontalAlignment="Left"
                                   Background="Transparent"
                                   BorderThickness="0"
                                   Click="MusicControl_Info_Click"
                                   CornerRadius="8"
                                   Cursor="Hand"
                                   HoverBackground="{DynamicResource MaskColor}"
                                   PressedBackground="{DynamicResource MaskColor}"
                                   ToolTip="Lyric Page">
                            <Grid>
                                <Border x:Name="MusicControl_Img"
                                        Width="60"
                                        Height="60"
                                        Margin="6,0,0,0"
                                        HorizontalAlignment="Left"
                                        d:Background="Pink"
                                        Background="{Binding CurrentPlayingCover, TargetNullValue=Pink}"
                                        CornerRadius="8"
                                        RenderOptions.BitmapScalingMode="HighQuality" />
                                <TextBlock x:Name="MusicControl_Title"
                                           MinWidth="150"
                                           Margin="78,0,10,0"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           Foreground="{DynamicResource ForeColor}"
                                           LineHeight="24">
                                    <Run d:Text="Dancing With Our Hands Tied"
                                         FontSize="16"
                                         FontWeight="Bold"
                                         Text="{Binding CurrentPlaying.MusicName, TargetNullValue='Welcome~'}" />
                                    <LineBreak />
                                    <Run d:Text="Taylor Swift"
                                         FontSize="12"
                                         Foreground="{DynamicResource HintForeColor}"
                                         Text="{Binding CurrentPlaying.SingerText, TargetNullValue='Lemon App'}" />
                                    <Run d:Text="reputation"
                                         FontSize="12"
                                         Foreground="{DynamicResource HintForeColor}"
                                         Text="{Binding CurrentPlaying.Album.Name, StringFormat=' · {0}'}" />
                                </TextBlock>
                            </Grid>
                        </ws:Button>
                        <!--  Center  -->
                        <Grid Grid.Column="1" Width="250">
                            <ws:Button x:Name="PlayBtn"
                                       Width="45"
                                       Height="45"
                                       Command="{Binding PlayPauseCommand}"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}"
                                       ToolTip="Play or Pause">
                                <ws:ConditionalControl Condition="{Binding IsPlaying}">
                                    <ws:ConditionalControl.ContentWhenFalse>
                                        <Path Data="{DynamicResource PlayIcon_Play}"
                                              Fill="{DynamicResource HighlightThemeColor}"
                                              Stretch="Uniform" />
                                    </ws:ConditionalControl.ContentWhenFalse>
                                    <ws:ConditionalControl.ContentWhenTrue>
                                        <Path Data="{DynamicResource PlayIcon_Pause}"
                                              Fill="{DynamicResource HighlightThemeColor}"
                                              Stretch="Uniform" />
                                    </ws:ConditionalControl.ContentWhenTrue>
                                </ws:ConditionalControl>
                            </ws:Button>
                            <ws:Button x:Name="PlayLastBtn"
                                       Width="32"
                                       Height="32"
                                       Margin="48,0,0,0"
                                       HorizontalAlignment="Left"
                                       Command="{Binding PlayLastCommand}"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}"
                                       ToolTip="Play the last one">
                                <Path Height="18"
                                      Data="{DynamicResource PlayIcon_Last}"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                            <ws:Button x:Name="PlayNextBtn"
                                       Width="32"
                                       Height="32"
                                       Margin="0,0,48,0"
                                       HorizontalAlignment="Right"
                                       Command="{Binding PlayNextCommand}"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}"
                                       ToolTip="Play the next one">
                                <Path Height="18"
                                      Data="{DynamicResource PlayIcon_Next}"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                            <ws:Button x:Name="CircleModeBtn"
                                       Width="32"
                                       Height="32"
                                       HorizontalAlignment="Right"
                                       Command="{Binding ChangeCircleModeCommand}"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}"
                                       ToolTip="Playback Mode">
                                <Path Height="18"
                                      d:Data="{DynamicResource CircleMode_Circle}"
                                      Data="{Binding CircleMode, Converter={x:Static converters:CircleModeToPathDataConverter.Instance}}"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                            <ToggleButton x:Name="OpenDesktopLyricBtn"
                                          Width="32"
                                          Height="32"
                                          HorizontalAlignment="Left"
                                          IsChecked="{Binding IsShowDesktopLyric}"
                                          Style="{StaticResource IconToggleButton}"
                                          Tag="{DynamicResource OpenDesktopLyric}"
                                          ToolTip="Desktop Lyric Viewer" />
                        </Grid>
                        <ws:WrapPanel Grid.Column="2"
                                      Margin="0,0,32,0"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Center"
                                      HorizontalSpacing="24">
                            <uc:MusicInfoLand MvId="{Binding CurrentPlaying.Mvmid}"
                                              Quality="{Binding CurrentQuality}"
                                              QualityCommand="{Binding SetQualityCommand}" />
                            <ws:Button x:Name="FavoriteBtn"
                                       Width="32"
                                       Height="32"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}"
                                       ToolTip="Add to my favorite">
                                <Path Height="16"
                                      Data="{DynamicResource HeartIcon}"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                            <base:FluentPopup x:Name="MoreOptionPopup"
                                              Background="{DynamicResource PopupWndBgColor}"
                                              ExtPopupAnimation="SlideUp"
                                              HorizontalOffset="-180"
                                              Placement="Right"
                                              StaysOpen="False"
                                              VerticalOffset="-180">
                                <!--  写得有点阴间了孩子..  -->
                                <ws:StackPanel Spacing="2">
                                    <ws:Button Padding="12,8"
                                               Background="Transparent"
                                               BorderThickness="0"
                                               Command="{x:Static components:PublicPopupMenuHolder.GotoArtistCommand}"
                                               CommandParameter="{Binding CurrentPlaying}"
                                               Style="{StaticResource SimpleButtonStyleForWs}">
                                        View Singers
                                    </ws:Button>
                                    <ws:Button Padding="12,8"
                                               Background="Transparent"
                                               BorderThickness="0"
                                               Command="{Binding GotoAlbumPageCommand}"
                                               CommandParameter="{Binding CurrentPlaying.Album.Id}"
                                               Style="{StaticResource SimpleButtonStyleForWs}">
                                        View Album
                                    </ws:Button>
                                    <ws:Button Padding="12,8"
                                               Background="Transparent"
                                               BorderThickness="0"
                                               Command="{Binding GoToCommentPageCommand}"
                                               Style="{StaticResource SimpleButtonStyleForWs}">
                                        View Comments
                                    </ws:Button>
                                    <ws:Button Padding="12,8"
                                               Background="Transparent"
                                               BorderThickness="0"
                                               Command="{x:Static components:PublicPopupMenuHolder.AddToMyDissCommand}"
                                               Style="{StaticResource SimpleButtonStyleForWs}">
                                        Add to Playlist
                                    </ws:Button>
                                    <ws:Button Padding="12,8"
                                               Background="Transparent"
                                               BorderThickness="0"
                                               Command="{Binding DownloadMusicCommand}"
                                               Style="{StaticResource SimpleButtonStyleForWs}">
                                        Download
                                    </ws:Button>
                                </ws:StackPanel>
                            </base:FluentPopup>
                            <ws:Button x:Name="MoreMenuBtn"
                                       Width="32"
                                       Height="32"
                                       Click="MoreMenuBtn_Click"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}"
                                       ToolTip="More">
                                <Path Height="16"
                                      Data="{DynamicResource MoreMenu}"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                            <base:FluentPopup x:Name="AudioAdjustPopup"
                                              Background="{DynamicResource PopupWndBgColor}"
                                              ExtPopupAnimation="SlideUp"
                                              HorizontalOffset="-200"
                                              Placement="Right"
                                              StaysOpen="False"
                                              VerticalOffset="-60">
                                <Grid Width="280"
                                      Height="36"
                                      Margin="12">
                                    <Slider x:Name="AudioAdjustSlider"
                                            Margin="16,0"
                                            VerticalAlignment="Center"
                                            IsMoveToPointEnabled="True"
                                            Maximum="1"
                                            Style="{StaticResource FluentSliderStyle}"
                                            Value="{Binding CurrentPlayingVolume}" />
                                </Grid>
                            </base:FluentPopup>
                            <ws:Button x:Name="AudioBtn"
                                       Width="32"
                                       Height="32"
                                       Click="AudioBtn_Click"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}"
                                       ToolTip="Volume">
                                <Path Height="16"
                                      Data="{DynamicResource AudioIcon}"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                            <ws:Button x:Name="OpenPlayListBtn"
                                       Width="32"
                                       Height="32"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}"
                                       ToolTip="Playlist">
                                <Path Height="14"
                                      Data="{DynamicResource OpenPlaylist}"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                        </ws:WrapPanel>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
        <Grid x:Name="PlayListPage" Visibility="Collapsed">
            <Border x:Name="PlayListPageMask" Background="Transparent" />
            <Grid x:Name="PlayListBar"
                  Width="320"
                  HorizontalAlignment="Right">
                <!--  Acrylic Background Presenter  -->
                <base:BackgroundPresenter Visibility="{Binding ElementName=PlayListPage, Path=Visibility}">
                    <base:BackgroundPresenter.Effect>
                        <BlurEffect Radius="40" />
                    </base:BackgroundPresenter.Effect>
                </base:BackgroundPresenter>
                <Border Background="{DynamicResource TabMaskColor}" />

                <TextBlock Margin="18,18,18,0" VerticalAlignment="Top">
                    <Run FontSize="22" Text="Playlist" />
                    <LineBreak />
                    <Run d:Text="0"
                         Foreground="{DynamicResource HintForeColor}"
                         Text="{Binding Playlist.Count, Mode=OneWay, StringFormat='\{0} Songs'}" />
                </TextBlock>
                <ws:TextBox x:Name="PlaylistSearchBox"
                            Height="30"
                            Margin="12,72,12,0"
                            Padding="8,6"
                            VerticalAlignment="Top"
                            Placeholder="Search"
                            PreviewKeyDown="PlaylistSearchBox_PreviewKeyDown"
                            Style="{StaticResource SimpleTextBoxStyleForWs}" />
                <ws:ListBox x:Name="PlaylistLb"
                            Margin="0,108,0,0"
                            d:ItemsSource="{d:SampleData ItemCount=5}"
                            ItemContainerStyle="{DynamicResource SimpleListBoxItemStyle}"
                            ItemsSource="{Binding Playlist, Mode=OneWay}"
                            SelectedItem="{Binding PlaylistChoosen}"
                            Style="{StaticResource SimpleListBoxStyle}">
                    <ws:ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Height="60"
                                  d:Background="#3C000000"
                                  Background="Transparent">
                                <Border x:Name="FocusedIcon"
                                        Width="3"
                                        Height="24"
                                        HorizontalAlignment="Left"
                                        d:Visibility="Visible"
                                        Background="{DynamicResource HighlightThemeColor}"
                                        CornerRadius="1.5"
                                        Visibility="Hidden" />
                                <TextBlock Margin="12,0,0,0" VerticalAlignment="Center">
                                    <Run Text="{Binding MusicName}" />
                                    <LineBreak />
                                    <Run Text="{Binding SingerText}" />
                                    <Run Text="•" />
                                    <Run Text="{Binding Album.Name}" />
                                </TextBlock>
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="FocusedIcon"
                                                                 Storyboard.TargetProperty="Height"
                                                                 From="0"
                                                                 To="24"
                                                                 Duration="0:0:0.3">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut" />
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <Setter TargetName="FocusedIcon" Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}" Value="False">
                                    <Setter TargetName="FocusedIcon" Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ws:ListBox.ItemTemplate>
                </ws:ListBox>
                <ws:Button x:Name="GotoPlayingBtn"
                           Width="36"
                           Height="36"
                           Margin="32"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Bottom"
                           Click="GotoPlayingBtn_Click"
                           CornerRadius="18"
                           Style="{StaticResource AccentButtonStyleForWs}">
                    <Path Width="16"
                          Data="{StaticResource Icon_Position}"
                          Fill="{DynamicResource BackgroundColor}"
                          Stretch="Uniform" />
                </ws:Button>
            </Grid>
        </Grid>
    </ws:BoxPanel>
</base:FluentWindowBase>

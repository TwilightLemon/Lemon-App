<base:FluentWindowBase x:Class="LemonApp.Views.Windows.MainWindow"
                       xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                       xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                       xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                       xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                       xmlns:local="clr-namespace:LemonApp.Views.Windows"
                       xmlns:base="clr-namespace:LemonApp.Common.UIBases;assembly=LemonApp.Common"
                       xmlns:ws="https://schemas.elecho.dev/wpfsuite"
                       xmlns:viewmodels="clr-namespace:LemonApp.ViewModels"
                       xmlns:converters="clr-namespace:LemonApp.Converters"
                       xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                       xmlns:uc="clr-namespace:LemonApp.Views.UserControls"
                       d:DataContext="{d:DesignInstance Type=viewmodels:MainWindowViewModel}"
                       mc:Ignorable="d"
                       Background="{DynamicResource WindowBackgroundColor}"
                       ExitOnCloseBtnClicked="False"
                       Mode="Acrylic"
                       Foreground="{DynamicResource ForeColor}"
                       Title="Lemon App"
                       Height="750"
                       Width="1080">
    <base:FluentWindowBase.Triggers>
        <EventTrigger SourceName="OpenPlayListBtn"
                      RoutedEvent="ws:Button.Click">
            <BeginStoryboard Storyboard="{DynamicResource OpenPlaylistAni}" />
        </EventTrigger>
        <EventTrigger SourceName="LyricPage_OpenPlayListBtn"
                      RoutedEvent="ws:Button.Click">
            <BeginStoryboard Storyboard="{DynamicResource OpenPlaylistAni}" />
        </EventTrigger>
        <EventTrigger SourceName="PlayListPageMask"
                      RoutedEvent="MouseDown">
            <BeginStoryboard Storyboard="{DynamicResource ClosePlaylistAni}" />
        </EventTrigger>
    </base:FluentWindowBase.Triggers>
    <base:FluentWindowBase.Resources>
        <BooleanToVisibilityConverter  x:Key="BoolToVisibility" />
        <CollectionViewSource x:Key="MainMenuSource"
                              Source="{Binding MainMenus}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Type" />
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>

        <Storyboard x:Key="OpenLyricPageAni">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="LyricPage"
                                              Storyboard.TargetProperty="Margin">
                <EasingThicknessKeyFrame KeyTime="00"
                                         Value="0 1390 0 -1390" />
                <EasingThicknessKeyFrame KeyTime="00:00:00.3"
                                         Value="0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut" />
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainPage"
                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.3"
                                        Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LyricPage"
                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                        Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="MusicControl"
                                              Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00.3"
                                         Value="0,110,0,-110">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut" />
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloseLyricPageAni">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="LyricPage"
                                              Storyboard.TargetProperty="Margin">
                <EasingThicknessKeyFrame KeyTime="00:00:00.3"
                                         Value="0 1390 0 -1390">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn" />
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="MusicControl"
                                              Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00.3"
                                         Value="0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut" />
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LyricPage"
                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.3"
                                        Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainPage"
                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                        Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="OpenPlaylistAni">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlayListPage"
                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                        Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="PlayListBar"
                                              Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00"
                                         Value="0 0 -320 0" />
                <EasingThicknessKeyFrame KeyTime="00:00:00.2500"
                                         Value="0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut" />
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PlayListPageMask"
                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                      Value="0" />
                <EasingDoubleKeyFrame KeyTime="00:00:00.2500"
                                      Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ClosePlaylistAni">
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="PlayListBar"
                                              Storyboard.TargetProperty="(FrameworkElement.Margin)">
                <EasingThicknessKeyFrame KeyTime="00:00:00.2500"
                                         Value="0 0 -320 0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut" />
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PlayListPage"
                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00.2500"
                                        Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="PlayListPageMask"
                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                <EasingDoubleKeyFrame KeyTime="00:00:00.2500"
                                      Value="0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ShowGoBackBtnAni">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="GoBackBtn"
                                           Storyboard.TargetProperty="(UIElement.Visibility)">
                <DiscreteObjectKeyFrame KeyTime="00:00:00"
                                        Value="{x:Static Visibility.Hidden}" />
                <DiscreteObjectKeyFrame KeyTime="00:00:00.2200000"
                                        Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="GoBackBtn"
                                           Storyboard.TargetProperty="(FrameworkElement.Width)">
                <EasingDoubleKeyFrame KeyTime="00:00:00"
                                      Value="0" />
                <EasingDoubleKeyFrame KeyTime="00:00:00.1500000"
                                      Value="28">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut" />
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="GoBackBtn"
                                              Storyboard.TargetProperty="(Control.Padding)">
                <EasingThicknessKeyFrame KeyTime="00:00:00"
                                         Value="1,1,1,1" />
                <EasingThicknessKeyFrame KeyTime="00:00:00.2000000"
                                         Value="0,14,0,-14" />
                <EasingThicknessKeyFrame KeyTime="00:00:00.4000000"
                                         Value="0,0,0,0">
                    <EasingThicknessKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut" />
                    </EasingThicknessKeyFrame.EasingFunction>
                </EasingThicknessKeyFrame>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
    </base:FluentWindowBase.Resources>
    <ws:BoxPanel x:Name="Container">
        <Grid x:Name="MainContentPage">
            <Grid x:Name="MainPage"
                  Margin="0 0 0 110">
                <Grid x:Name="TitleBar"
                      Height="48"
                      WindowChrome.IsHitTestVisibleInChrome="True"
                      VerticalAlignment="Top">
                    <!--中部功能区-->
                    <!--三大按钮占位 Width:144-->
                    <!--左侧Icon-->
                    <ws:WrapPanel HorizontalAlignment="Left"
                                  VerticalAlignment="Center"
                                  ClipToBounds="True"
                                  Margin="16 0 0 0"
                                  HorizontalSpacing="12"
                                  Orientation="Horizontal">
                        <ws:Button x:Name="GoBackBtn"
                                   d:Visibility="Visible"
                                   Visibility="{Binding ElementName=MainContentFrame,
                                                    Path=CanGoBack,Converter={StaticResource BoolToVisibility}}"
                                   Style="{StaticResource SimpleIconButtonStyleForWs}"
                                   Width="28"
                                   Height="28"
                                   Click="GoBackBtn_Click"
                                   Margin="0,0,0,0"
                                   Padding="1,1,1,1">
                            <Path Fill="{DynamicResource ForeColor}"
                                  Width="12"
                                  Height="12"
                                  Stretch="Uniform"
                                  Data="{StaticResource Icon_Back}" />
                        </ws:Button>
                        <Image HorizontalAlignment="Left"
                               Width="22"
                               Height="22"
                               RenderOptions.BitmapScalingMode="HighQuality"
                               Source="/Resources/icon.ico" />
                        <TextBlock VerticalAlignment="Center"
                                   HorizontalAlignment="Left"
                                   FontSize="14"
                                   Text="Lemon App" />
                    </ws:WrapPanel>
                    <Grid Margin="220 8"
                          MaxWidth="380">
                        <base:FluentPopup x:Name="SearchHintPopup"
                                          ExtPopupAnimation="SlideDown"
                                          StaysOpen="False"
                                          SlideAnimationOffset="20"
                                          Placement="Bottom" />
                        <ws:TextBox x:Name="SearchBox"
                                    Background="{DynamicResource MaskColor}"
                                    HoverBackground="{DynamicResource FocusMaskColor}"
                                    FocusedBackground="{DynamicResource FocusMaskColor}"
                                    BorderBrush="{DynamicResource BorderColor}"
                                    FocusedBorderBrush="{DynamicResource FocusMaskColor}"
                                    HoverBorderBrush="{DynamicResource FocusMaskColor}"
                                    SelectionBrush="{DynamicResource HighlightThemeColor}"
                                    CaretBrush="{DynamicResource ForeColor}"
                                    Foreground="{DynamicResource ForeColor}"
                                    Height="32"
                                    Padding="6 7 0 0"
                                    Placeholder="Search"
                                    CornerRadius="6"
                                    TextChanged="SearchBox_TextChanged"
                                    PreviewKeyDown="SearchBox_PreviewKeyDown" />
                    </Grid>
                    <!--用户头像&菜单-->
                    <Border HorizontalAlignment="Right"
                            Margin="0 0 144 0"
                            VerticalAlignment="Bottom">
                        <base:FluentPopup x:Name="UserProfilePopup"
                                          ExtPopupAnimation="SlideDown"
                                          StaysOpen="False"
                                          Placement="Bottom" />
                    </Border>
                    <ws:Button x:Name="UserProfileBtn"
                               HorizontalAlignment="Right"
                               Cursor="Hand"
                               CornerRadius="18"
                               BorderThickness="0"
                               ToolTip="Main Menu"
                               Background="{DynamicResource MaskColor}"
                               HoverBackground="{DynamicResource FocusMaskColor}"
                               PressedBackground="{DynamicResource FocusMaskColor}"
                               Width="32"
                               Height="32"
                               Margin="0 0 156 0"
                               Click="UserProfileBtn_Click">
                        <Border Background="{Binding Avator,TargetNullValue={StaticResource HighlightThemeColor}}"
                                d:Background="LightPink"
                                RenderOptions.BitmapScalingMode="HighQuality"
                                Width="28"
                                CornerRadius="14"
                                Height="28" />
                    </ws:Button>
                </Grid>
                <Grid x:Name="ContentPage"
                      Margin="0,48,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"
                                          MaxWidth="320"
                                          MinWidth="50" />
                        <ColumnDefinition Width="4*" />
                    </Grid.ColumnDefinitions>

                    <Grid x:Name="MainMenuGrid">
                        <ws:ListBox x:Name="MainPageMenu"
                                    ItemsSource="{Binding Source={StaticResource MainMenuSource}}"
                                    d:ItemsSource="{d:SampleData ItemCount=5}"
                                    SelectedItem="{Binding SelectedMenu}"
                                    Style="{StaticResource SimpleListBoxStyle}"
                                    VerticalAlignment="Top">
                            <ws:ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ws:ListBoxItem}">
                                    <EventSetter Event="PreviewMouseLeftButtonDown"
                                                 Handler="MainPageMenuItem_PreviewMouseLeftButtonDown" />
                                    <EventSetter Event="MouseLeave"
                                                 Handler="MainPageMenuItem_MouseLeave" />
                                    <EventSetter Event="MouseLeftButtonUp"
                                                 Handler="MainPageMenuItem_MouseLeftButtonUp" />
                                    <Setter Property="FocusVisualStyle"
                                            Value="{x:Null}" />
                                    <Setter Property="Margin"
                                            Value="5 2" />
                                    <Setter Property="CornerRadius"
                                            Value="8" />
                                    <Setter Property="BorderThickness"
                                            Value="0" />
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource ForeColor}" />
                                    <Setter Property="HoverBackground"
                                            Value="{DynamicResource MaskColor}" />
                                    <Setter Property="SelectedBackground"
                                            Value="{DynamicResource MaskColor}" />
                                    <Setter Property="SelectedActiveBackground"
                                            Value="{DynamicResource MaskColor}" />
                                </Style>
                            </ws:ListBox.ItemContainerStyle>
                            <ws:ListBox.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name}"
                                                       Foreground="{DynamicResource ForeColor}"
                                                       FontSize="14"
                                                       Opacity="0.8"
                                                       FontWeight="Bold"
                                                       Margin="12 8 8 2" />
                                        </DataTemplate>
                                    </GroupStyle.HeaderTemplate>
                                </GroupStyle>
                            </ws:ListBox.GroupStyle>
                            <ws:ListBox.ItemTemplate>
                                <DataTemplate>
                                    <ws:BoxPanel Height="40"
                                               d:Background="#3C000000"
                                               Background="Transparent">
                                        <ContentControl Content="{Binding Decorator}"/>
                                        <ws:StackPanel Orientation="Horizontal"
                                                       VerticalAlignment="Center"
                                                       Margin="10 0"
                                                       Spacing="12">
                                            <Border x:Name="FocusedIcon"
                                                    Width="3"
                                                    Margin="-18 0 0 0"
                                                    Background="{DynamicResource HighlightThemeColor}"
                                                    CornerRadius="1.5"
                                                    Height="16"
                                                    Visibility="Hidden"
                                                    d:Visibility="Visible" />
                                            <Path VerticalAlignment="Center"
                                                  Fill="{DynamicResource ForeColor}"
                                                  Data="{Binding Icon}"
                                                  Stretch="Uniform"
                                                  Width="14"
                                                  Height="14" />
                                            <TextBlock Text="{Binding Name}"
                                                       VerticalAlignment="Center" />
                                        </ws:StackPanel>
                                    </ws:BoxPanel>
                                    <DataTemplate.Triggers>
                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}"
                                                     Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetName="FocusedIcon"
                                                                         Storyboard.TargetProperty="Height"
                                                                         From="0"
                                                                         To="16"
                                                                         Duration="0:0:0.3">
                                                            <DoubleAnimation.EasingFunction>
                                                                <CubicEase EasingMode="EaseOut" />
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <Setter TargetName="FocusedIcon"
                                                    Property="Visibility"
                                                    Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}"
                                                     Value="False">
                                            <Setter TargetName="FocusedIcon"
                                                    Property="Visibility"
                                                    Value="Hidden" />
                                        </DataTrigger>
                                    </DataTemplate.Triggers>
                                </DataTemplate>
                            </ws:ListBox.ItemTemplate>
                        </ws:ListBox>
                        <!--<TextBlock VerticalAlignment="Bottom"
                                   Margin="8"
                                   Opacity="0.4"
                                   TextAlignment="Center"
                                   Text="Powered by .NET 8"
                                   TextWrapping="Wrap" />-->
                    </Grid>
                    <Border x:Name="ContentHost"
                            Margin="8 0 8 8"
                            Grid.Column="1"
                            Background="{DynamicResource ContentBgColor}"
                            CornerRadius="8">
                        <Frame Name="MainContentFrame"
                               Navigated="MainContentFrame_Navigated"
                               NavigationUIVisibility="Hidden">
                        </Frame>
                    </Border>
                    <ws:ConditionalControl Condition="{Binding IsLoading}"
                                           Grid.Column="1"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center">
                        <ws:ConditionalControl.ContentWhenTrue>
                            <base:LoadingIcon x:Name="LoadingIcon"
                                              Grid.Column="1"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center" />
                        </ws:ConditionalControl.ContentWhenTrue>
                    </ws:ConditionalControl>
                </Grid>
            </Grid>
            <Grid x:Name="LyricPage" Visibility="Collapsed">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="6*" />
                    <ColumnDefinition Width="7*" />
                </Grid.ColumnDefinitions>
                <Border x:Name="LyricPage_Background"
                        Background="{Binding LyricPageBackgound}"
                        Grid.ColumnSpan="2" />
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*" />
                        <RowDefinition Height="1*" />
                    </Grid.RowDefinitions>
                    <Border x:Name="LyricPage_ImgEdge"
                            Margin="60"
                            MinWidth="200"
                            MaxWidth="500"/>
                    <Border x:Name="LyricPage_Img"
                            HorizontalAlignment="Stretch"
                            AllowDrop="True"
                            Drop="LyricPage_Img_Drop"
                            Height="{Binding ElementName=LyricPage_Img,Path=ActualWidth}"
                            d:Background="Pink"
                            RenderOptions.BitmapScalingMode="HighQuality"
                            Background="{Binding CurrentPlayingCover,TargetNullValue={StaticResource HighlightThemeColor}}"
                            CornerRadius="12">
                        <Border.Width>
                            <MultiBinding Converter="{x:Static converters:MinValueConverter.Instance}">
                                <Binding Path="ActualWidth"
                                         ElementName="LyricPage_ImgEdge" />
                                <Binding Path="ActualHeight"
                                         ElementName="LyricPage_ImgEdge" />
                            </MultiBinding>
                        </Border.Width>
                        <Border.Effect>
                            <DropShadowEffect Color="Black"
                                              Direction="0"
                                              ShadowDepth="0"
                                              Opacity="0.6"
                                              BlurRadius="30" />
                        </Border.Effect>
                    </Border>
                    <ws:FlexPanel Grid.Row="1"
                                  Margin="0 -50 0 40"
                                  Direction="Column"
                                  MainAlignment="SpaceEvenly">
                        <TextBlock Margin="48 0"
                                   MinWidth="150"
                                   Foreground="{DynamicResource ForeColor}"
                                   VerticalAlignment="Top"
                                   LineHeight="32"
                                   TextAlignment="Center"
                                   HorizontalAlignment="Stretch">
                                    <Run Text="{Binding CurrentPlaying.MusicName, TargetNullValue='Welcome~'}"
                                         d:Text="Dancing With Our Hands Tied"
                                         FontWeight="Bold"
                                         FontSize="18" />
                                    <LineBreak />
                                    <Run Text="{Binding CurrentPlaying.SingerText ,TargetNullValue='Lemon App'}"
                                         d:Text="Taylor Swift"
                                         FontSize="14" />
                                     · <Run Text="{Binding CurrentPlaying.Album.Name}"
                                            d:Text="reputation"
                                            FontSize="12" />
                        </TextBlock>
                        <Grid Margin="58 0"
                              MaxWidth="580">
                            <TextBlock d:Text="00:00"
                                       Text="{Binding CurrentPlayingPositionText}"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center" />
                            <TextBlock d:Text="00:00"
                                       Text="{Binding CurrentPlayingDurationText}"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center" />
                            <Slider Style="{DynamicResource FluentSliderStyle}"
                                    PreviewMouseDown="PlaySlider_PreviewMouseDown"
                                    PreviewMouseUp="PlaySlider_PreviewMouseUp"
                                    Maximum="{Binding CurrentPlayingDuration}"
                                    Margin="42 0"
                                    VerticalAlignment="Center"
                                    Value="{Binding CurrentPlayingPosition, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                        <ws:FlexPanel MaxWidth="580"
                                      MainAlignment="SpaceEvenly"
                                      Margin="32,0">
                            <ws:Button ToolTip="Add to my favorite"
                                       Width="42"
                                       Height="42"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}">
                                <Path Data="{DynamicResource HeartIcon}"
                                      Height="18"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                            <ToggleButton Width="42"
                                          Height="42"
                                          Padding="13"
                                          IsChecked="{Binding IsShowDesktopLyric}"
                                          ToolTip="Desktop Lyric Viewer"
                                          Tag="{DynamicResource OpenDesktopLyric}"
                                          Style="{StaticResource IconToggleButton}" />
                            <ws:Button Width="42"
                                       Height="42"
                                       ToolTip="Play the last one"
                                       Command="{Binding PlayLastCommand}"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}">
                                <Path Data="{DynamicResource PlayIcon_Last}"
                                      Height="18"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                            <ws:Button Width="58"
                                       Height="58"
                                       ToolTip="Play or Pause"
                                       Command="{Binding PlayPauseCommand}"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}">
                                <ws:ConditionalControl Condition="{Binding IsPlaying}">
                                    <ws:ConditionalControl.ContentWhenFalse>
                                        <Path Data="{DynamicResource PlayIcon_Play}"
                                              Fill="{DynamicResource HighlightThemeColor}"
                                              Stretch="Uniform" />
                                    </ws:ConditionalControl.ContentWhenFalse>
                                    <Path Data="{DynamicResource PlayIcon_Pause}"
                                          Fill="{DynamicResource HighlightThemeColor}"
                                          Stretch="Uniform" />
                                </ws:ConditionalControl>
                            </ws:Button>
                            <ws:Button Width="42"
                                       Height="42"
                                       ToolTip="Play the next one"
                                       Command="{Binding PlayNextCommand}"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}">
                                <Path Data="{DynamicResource PlayIcon_Next}"
                                      Height="18"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                            <ws:Button Width="42"
                                       Height="42"
                                       ToolTip="Playback Mode"
                                       Command="{Binding ChangeCircleModeCommand}"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}">
                                <Path Data="{Binding CircleMode, Converter={x:Static converters:CircleModeToPathDataConverter.Instance}}"
                                      d:Data="{DynamicResource CircleMode_Circle}"
                                      Height="18"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                            <ws:Button x:Name="LyricPage_OpenPlayListBtn"
                                       ToolTip="Playlist"
                                       Height="42"
                                       Width="42"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}">
                                <Path Data="{DynamicResource OpenPlaylist}"
                                      Height="16"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                        </ws:FlexPanel>
                        <Grid Margin="58 0"
                              MaxWidth="580">
                            <Slider VerticalAlignment="Center"
                                    Margin="32 0 0 0"
                                    IsMoveToPointEnabled="True"
                                    Value="{Binding CurrentPlayingVolume}"
                                    Style="{StaticResource FluentSliderStyle}"
                                    Maximum="1" />
                            <Path Data="{DynamicResource AudioIcon}"
                                  Fill="{DynamicResource ForeColor}"
                                  Stretch="Uniform"
                                  Height="16"
                                  Width="16"
                                  HorizontalAlignment="Left" />
                        </Grid>
                    </ws:FlexPanel>
                </Grid>
                <Border x:Name="LyricViewHost"
                        Grid.Column="1"
                        d:Background="White"
                        Margin="10 80 120 80">
                    <Border.OpacityMask>
                        <LinearGradientBrush EndPoint="0.5,1"
                                             StartPoint="0.5,0">
                            <GradientStop Color="Transparent" />
                            <GradientStop Color="Transparent"
                                          Offset="1" />
                            <GradientStop Color="Black"
                                          Offset="0.2" />
                            <GradientStop Color="Black"
                                          Offset="0.8" />
                        </LinearGradientBrush>
                    </Border.OpacityMask>
                </Border>
                <Border x:Name="LyricToolBar"
                        Grid.Column="1"
                        Background="{DynamicResource MaskColor}"
                        CornerRadius="8"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Margin="0 0 36 0"
                        Width="36">
                    <StackPanel>
                        <ws:Button Style="{StaticResource SimpleIconButtonStyleForWs}"
                                   Height="36"
                                   Padding="10"
                                   Command="{Binding LyricView.FontSizeUpCommand}">
                            <Path Stretch="Uniform"
                                  Fill="{DynamicResource ForeColor}"
                                  Data="{StaticResource Icon_FontUp}" />
                        </ws:Button>
                        <ws:Button Style="{StaticResource SimpleIconButtonStyleForWs}"
                                   Height="36"
                                   Padding="10"
                                   Command="{Binding LyricView.FontSizeDownCommand}">
                            <Path Stretch="Uniform"
                                  Fill="{DynamicResource ForeColor}"
                                  Data="{StaticResource Icon_FontDown}" />
                        </ws:Button>
                        <ToggleButton Height="36"
                                      Style="{StaticResource IconToggleButton}"
                                      Visibility="{Binding LyricView.IsTranslationAvailable,Converter={StaticResource BoolToVisibility}}"
                                      Padding="10"
                                      IsChecked="{Binding LyricView.IsShowTranslation}"
                                      Tag="{StaticResource Icon_Trans}" />
                        <ToggleButton Height="36"
                                      Style="{StaticResource IconToggleButton}"
                                      Visibility="{Binding LyricView.IsRomajiAvailable,Converter={StaticResource BoolToVisibility}}"
                                      Padding="10"
                                      IsChecked="{Binding LyricView.IsShowRomaji}"
                                      Tag="{StaticResource Icon_Romaji}" />
                    </StackPanel>
                </Border>
                <ws:Button  x:Name="LyricPage_BackBtn"
                            Width="64"
                            Height="32"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Top"
                            Margin="0 18 0 0"
                            WindowChrome.IsHitTestVisibleInChrome="True"
                            Click="LyricPage_BackBtn_Click"
                            Style="{StaticResource SimpleIconButtonStyleForWs}">
                    <Border Width="52" Height="6" CornerRadius="3" Background="{DynamicResource ForeColor}" Opacity="0.6"/>
                </ws:Button>
            </Grid>
            <uc:AudioVisualizer  x:Name="visualizer"
                                 VerticalAlignment="Bottom" 
                                 Height="214"
                                 Opacity="0.8"
                                 IsPlaying="{Binding IsPlaying,Mode=OneWay}"
                                 Color="{DynamicResource HighlightThemeColor}"
                                 Margin="8 0"/>
            <Border x:Name="MusicControl"
                    BorderThickness="0 1 0 0"
                    Height="110"
                    VerticalAlignment="Bottom"
                    BorderBrush="{DynamicResource BorderColor}"
                    Background="{DynamicResource TabMaskColor}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*" />
                        <RowDefinition Height="5*" />
                    </Grid.RowDefinitions>
                    <base:FluentPopup x:Name="NotificationBox"
                                      StaysOpen="True"
                                      FollowWindowMoving="True"
                                      ExtPopupAnimation="SlideUp"
                                      Placement="Top"
                                      Background="{DynamicResource PopupWndBgColor}"
                                      VerticalOffset="-12"
                                      HorizontalOffset="12">
                        <Border HorizontalAlignment="Center"
                                MaxWidth="320"
                                VerticalAlignment="Bottom"
                                Padding="12"
                                d:Visibility="Visible">
                            <TextBlock x:Name="NotificationTb"
                                       TextWrapping="Wrap"
                                       d:Text="xxxxxxxxxxxxxxx" />
                        </Border>
                    </base:FluentPopup>
                    <Grid>
                        <TextBlock x:Name="PlayingTimeTb"
                                   d:Text="00:00"
                                   Text="{Binding CurrentPlayingPositionText}"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Margin="14 0 0 0" />
                        <TextBlock x:Name="TotalTimeTb"
                                   d:Text="00:00"
                                   Text="{Binding CurrentPlayingDurationText}"
                                   HorizontalAlignment="Right"
                                   VerticalAlignment="Center"
                                   Margin="0 0 14 0" />
                        <Slider Style="{DynamicResource FluentSliderStyle}"
                                x:Name="PlaySlider"
                                PreviewMouseDown="PlaySlider_PreviewMouseDown"
                                PreviewMouseUp="PlaySlider_PreviewMouseUp"
                                Maximum="{Binding CurrentPlayingDuration}"
                                Margin="60 0"
                                VerticalAlignment="Center"
                                Value="{Binding CurrentPlayingPosition,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" />
                        <ws:ProgressBar x:Name="CacheProg"
                                        VerticalAlignment="Bottom"
                                        Height="2"
                                        Maximum="1"
                                        Opacity="0"
                                        d:Opacity="1"
                                        d:Value="0.5"
                                        Value="{Binding CacheDownloadProgress}"
                                        CornerRadius="1"
                                        BorderThickness="0"
                                        HorizontalAlignment="Center"
                                        Background="{DynamicResource FocusMaskColor}"
                                        Width="240"
                                        Foreground="{DynamicResource HighlightThemeColor}" />
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <!--Left -->
                        <ws:Button x:Name="MusicControl_Info"
                                   Margin="6,4,0,4"
                                   Height="70"
                                   Cursor="Hand"
                                   ToolTip="Lyric Page"
                                   HorizontalAlignment="Left"
                                   Background="Transparent"
                                   HoverBackground="{DynamicResource MaskColor}"
                                   PressedBackground="{DynamicResource MaskColor}"
                                   BorderThickness="0"
                                   CornerRadius="8"
                                   Click="MusicControl_Info_Click">
                            <Grid>
                                <Border x:Name="MusicControl_Img"
                                        Margin="6 0 0 0"
                                        HorizontalAlignment="Left"
                                        Width="60"
                                        Height="60"
                                        RenderOptions.BitmapScalingMode="HighQuality"
                                        d:Background="Pink"
                                        Background="{Binding CurrentPlayingCover,TargetNullValue=Pink}"
                                        CornerRadius="8" />
                                <TextBlock x:Name="MusicControl_Title"
                                           Margin="78 0 10 0"
                                           MinWidth="150"
                                           Foreground="{DynamicResource ForeColor}"
                                           VerticalAlignment="Center"
                                           LineHeight="24"
                                           HorizontalAlignment="Left">
                                    <Run Text="{Binding CurrentPlaying.MusicName, TargetNullValue='Welcome~'}"
                                         d:Text="Dancing With Our Hands Tied"
                                         FontWeight="Bold"
                                         FontSize="16" />
                                    <LineBreak />
                                    <Run Text="{Binding CurrentPlaying.SingerText ,TargetNullValue='Lemon App'}"
                                         d:Text="Taylor Swift"
                                         FontSize="12" />
                                     · <Run Text="{Binding CurrentPlaying.Album.Name}"
                                            d:Text="reputation"
                                            FontSize="12" />
                                </TextBlock>
                            </Grid>
                        </ws:Button>
                        <!--Center-->
                        <Grid Grid.Column="1"
                              Width="250">
                            <ws:Button x:Name="PlayBtn"
                                       Width="45"
                                       Height="45"
                                       ToolTip="Play or Pause"
                                       Command="{Binding PlayPauseCommand}"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}">
                                <ws:ConditionalControl Condition="{Binding IsPlaying}">
                                    <ws:ConditionalControl.ContentWhenFalse>
                                        <Path Data="{DynamicResource PlayIcon_Play}"
                                              Fill="{DynamicResource HighlightThemeColor}"
                                              Stretch="Uniform" />
                                    </ws:ConditionalControl.ContentWhenFalse>
                                    <ws:ConditionalControl.ContentWhenTrue>
                                        <Path Data="{DynamicResource PlayIcon_Pause}"
                                              Fill="{DynamicResource HighlightThemeColor}"
                                              Stretch="Uniform" />
                                    </ws:ConditionalControl.ContentWhenTrue>
                                </ws:ConditionalControl>
                            </ws:Button>
                            <ws:Button x:Name="PlayLastBtn"
                                       Width="32"
                                       Height="32"
                                       Margin="48 0 0 0"
                                       ToolTip="Play the last one"
                                       Command="{Binding PlayLastCommand}"
                                       HorizontalAlignment="Left"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}">
                                <Path Data="{DynamicResource PlayIcon_Last}"
                                      Height="18"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                            <ws:Button x:Name="PlayNextBtn"
                                       Width="32"
                                       Height="32"
                                       Margin="0 0 48 0"
                                       ToolTip="Play the next one"
                                       Command="{Binding PlayNextCommand}"
                                       HorizontalAlignment="Right"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}">
                                <Path Data="{DynamicResource PlayIcon_Next}"
                                      Height="18"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                            <ws:Button x:Name="CircleModeBtn"
                                       Width="32"
                                       Height="32"
                                       ToolTip="Playback Mode"
                                       Command="{Binding ChangeCircleModeCommand}"
                                       HorizontalAlignment="Right"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}">
                                <Path Data="{Binding CircleMode,Converter={x:Static converters:CircleModeToPathDataConverter.Instance}}"
                                      d:Data="{DynamicResource CircleMode_Circle}"
                                      Height="18"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                            <ToggleButton x:Name="OpenDesktopLyricBtn"
                                          Width="32"
                                          Height="32"
                                          IsChecked="{Binding IsShowDesktopLyric}"
                                          ToolTip="Desktop Lyric Viewer"
                                          HorizontalAlignment="Left"
                                          Tag="{DynamicResource OpenDesktopLyric}"
                                          Style="{StaticResource IconToggleButton}">
                            </ToggleButton>
                        </Grid>
                        <ws:WrapPanel Grid.Column="2"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Center"
                                      Margin="0 0 32 0"
                                      HorizontalSpacing="24">
                            <uc:MusicInfoLand  Quality="{Binding CurrentQuality}"
                                               MvId="{Binding CurrentPlaying.Mvmid}"
                                               QualityCommand="{Binding SetQualityCommand}" />
                            <ws:Button x:Name="FavoriteBtn"
                                       Width="32"
                                       Height="32"
                                       ToolTip="Add to my favorite"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}">
                                <Path Data="{DynamicResource HeartIcon}"
                                      Height="16"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                            <ws:Button x:Name="MoreMenuBtn"
                                       Width="32"
                                       Height="32"
                                       ToolTip="More"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}">
                                <Path Data="{DynamicResource MoreMenu}"
                                      Height="16"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                            <base:FluentPopup x:Name="AudioAdjustPopup"
                                              ExtPopupAnimation="SlideUp"
                                              Placement="Right"
                                              VerticalOffset="-60"
                                              HorizontalOffset="-200"
                                              Background="{DynamicResource PopupWndBgColor}"
                                              StaysOpen="False">
                                <Grid Height="36"
                                      Width="280"
                                      Margin="12">
                                    <Slider x:Name="AudioAdjustSlider"
                                            VerticalAlignment="Center"
                                            Margin="16 0"
                                            IsMoveToPointEnabled="True"
                                            Value="{Binding CurrentPlayingVolume}"
                                            Style="{StaticResource FluentSliderStyle}"
                                            Maximum="1" />
                                </Grid>
                            </base:FluentPopup>
                            <ws:Button x:Name="AudioBtn"
                                       Width="32"
                                       Height="32"
                                       ToolTip="Volume"
                                       Click="AudioBtn_Click"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}">
                                <Path Data="{DynamicResource AudioIcon}"
                                      Height="16"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                            <ws:Button x:Name="OpenPlayListBtn"
                                       Width="32"
                                       Height="32"
                                       ToolTip="Playlist"
                                       Style="{StaticResource SimpleIconButtonStyleForWs}">
                                <Path Data="{DynamicResource OpenPlaylist}"
                                      Height="14"
                                      Fill="{DynamicResource ForeColor}"
                                      Stretch="Uniform" />
                            </ws:Button>
                        </ws:WrapPanel>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
        <Grid x:Name="PlayListPage"
              Visibility="Collapsed">
            <Border x:Name="PlayListPageMask"
                    Background="#7F000000" />
            <Grid x:Name="PlayListBar"
                  Width="320"
                  HorizontalAlignment="Right"
                  Background="{DynamicResource BackgroundColor}">
                <TextBlock Margin="18 18 18 0"
                           VerticalAlignment="Top">
                    <Run Text="Playlist"
                         FontSize="22" />
                    <LineBreak />
                    <Run Text="{Binding Playlist.Count,Mode=OneWay}"
                         d:Text="0" /> Songs
                </TextBlock>
                <ws:TextBox x:Name="PlaylistSearchBox"
                            Height="30"
                            Margin="12 72 12 0"
                            Padding="8 6"
                            Placeholder="Search"
                            VerticalAlignment="Top"
                            PreviewKeyDown="PlaylistSearchBox_PreviewKeyDown"
                            Style="{StaticResource SimpleTextBoxStyleForWs}" />
                <ws:ListBox x:Name="PlaylistLb"
                            Margin="0 108 0 0"
                            Style="{StaticResource SimpleListBoxStyle}"
                            ItemsSource="{Binding Playlist,Mode=OneWay}"
                            SelectedItem="{Binding PlaylistChoosen}"
                            ItemContainerStyle="{DynamicResource SimpleListBoxItemStyle}"
                            d:ItemsSource="{d:SampleData ItemCount=5}">
                    <ws:ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Height="60"
                                  d:Background="#3C000000"
                                  Background="Transparent">
                                <Border x:Name="FocusedIcon"
                                        Width="3"
                                        HorizontalAlignment="Left"
                                        Background="{DynamicResource HighlightThemeColor}"
                                        CornerRadius="1.5"
                                        Height="24"
                                        Visibility="Hidden"
                                        d:Visibility="Visible" />
                                <TextBlock  VerticalAlignment="Center"
                                            Margin="12 0 0 0">
                                    <Run Text="{Binding MusicName}" />
                                    <LineBreak />
                                    <Run Text="{Binding SingerText}" />
                                    <Run Text="•" />
                                    <Run Text="{Binding Album.Name}" />
                                </TextBlock>
                            </Grid>
                            <DataTemplate.Triggers>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}"
                                             Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="FocusedIcon"
                                                                 Storyboard.TargetProperty="Height"
                                                                 From="0"
                                                                 To="24"
                                                                 Duration="0:0:0.3">
                                                    <DoubleAnimation.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut" />
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                    <Setter TargetName="FocusedIcon"
                                            Property="Visibility"
                                            Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}, Mode=FindAncestor}}"
                                             Value="False">
                                    <Setter TargetName="FocusedIcon"
                                            Property="Visibility"
                                            Value="Hidden" />
                                </DataTrigger>
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ws:ListBox.ItemTemplate>
                </ws:ListBox>
                <ws:Button x:Name="GotoPlayingBtn"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Bottom"
                           Margin="32"
                           Width="36"
                           Height="36"
                           CornerRadius="18"
                           Style="{StaticResource AccentButtonStyleForWs}"
                           Click="GotoPlayingBtn_Click">
                    <Path Fill="{DynamicResource BackgroundColor}"
                          Stretch="Uniform"
                          Data="{StaticResource Icon_Position}"
                          Width="16" />
                </ws:Button>
            </Grid>
        </Grid>
    </ws:BoxPanel>
</base:FluentWindowBase>
